(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 12 112 68 1) (list 79 29 127 59 1) (list 69 29 106 77 1) (list 81 29 127 58 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 13 95 115 1) (list 84 29 159 92 1) (list 83 72 69 28 1) (list 78 82 155 57 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -4 112 105 1) (list 75 139 176 74 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 2 96 73 1) (list 70 161 155 111 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 12 170 80 1) (list 69 192 107 67 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 2 139 112 1) (list 67 178 116 97 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -36 117 75 1) (list 67 60 123 61 1) (list 65 178 106 93 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -4 166 85 1) (list 61 183 117 88 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 27 149 69 1) (list 63 176 128 88 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 4 106 82 1) (list 67 158 171 95 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 5 95 1) (list 69 -10 127 112 1) (list 70 159 149 106 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -5 133 100 1) (list 74 164 128 109 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -16 159 103 1) (list 77 159 128 96 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -3 225 88 1) (list 74 162 133 101 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -13 101 104 1) (list 75 115 110 84 1) (list 74 210 111 93 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -18 112 87 1) (list 70 131 116 106 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -35 123 93 1) (list 70 88 91 68 1) (list 69 157 149 61 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -45 144 80 1) (list 69 162 106 99 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -55 123 79 1) (list 69 51 127 53 1) (list 67 168 106 77 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -30 133 81 1) (list 70 141 144 100 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 18 155 101 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -77 138 115 1) (list 75 146 133 113 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 18 139 87 1) (list 74 88 159 76 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -29 171 105 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -96 111 106 1) (list 70 0 143 71 1) (list 69 106 159 55 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -101 122 79 1) (list 69 47 283 79 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 331 79 1) (list 71 -81 75 29 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 227 79 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 195 80 94 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -35 116 96 1) (list 68 88 90 104 1) (list 70 204 96 99 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -29 148 85 1) (list 73 88 116 101 1) (list 74 189 101 87 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -29 155 94 1) (list 79 99 164 105 1) (list 74 227 104 87 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 2 87 1) (list 77 -13 122 95 1) (list 75 88 111 95 1) (list 72 204 117 78 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -18 106 105 1) (list 67 121 75 77 1) (list 65 195 122 85 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -25 123 96 1) (list 62 82 139 84 1) (list 60 199 128 84 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -12 127 55 1) (list 64 19 68 27 1) (list 67 99 176 92 1) (list 62 200 128 84 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -13 91 79 1) (list 63 73 181 80 1) (list 62 184 111 63 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -45 96 84 1) (list 63 72 139 95 1) (list 60 179 106 69 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -31 96 93 1) (list 63 70 101 90 1) (list 65 172 117 88 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -52 123 97 1) (list 69 44 80 93 1) (list 71 134 64 97 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -79 138 105 1) (list 71 49 80 70 1) (list 72 55 37 79 1) (list 74 161 96 107 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 76 -84 123 83 1) (list 78 29 111 106 1) (list 74 151 127 104 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 76 -68 102 83 1) (list 74 28 208 74 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 183 116 113 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -47 192 101 1) (list 77 81 101 49 1) (list 75 150 138 93 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -58 134 94 1) (list 72 60 90 84 1) (list 74 102 64 35 1) (list 70 155 149 103 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -57 127 87 1) (list 67 59 101 84 1) (list 69 192 117 99 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -41 186 95 1) (list 71 141 47 47 1) (list 72 198 96 85 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -49 133 93 1) (list 70 74 123 105 1) (list 69 180 106 63 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -64 106 80 1) (list 64 31 80 103 1) (list 67 133 100 91 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -74 127 90 1) (list 66 16 123 95 1) (list 67 149 139 74 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -74 122 75 1) (list 65 38 122 76 1) (list 63 155 127 93 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -69 116 85 1) (list 60 31 102 91 1) (list 59 143 116 91 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -69 139 84 1) (list 56 37 134 92 1) (list 54 149 139 87 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 53 -49 117 67 1) (list 55 -33 37 77 1) (list 51 47 154 101 1) (list 50 153 176 113 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -50 0 331 113 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -50 0 329 113 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -50 0 116 113 1) (list 51 101 122 65 1) (list 50 196 117 59 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 48 -48 196 83 1) (list 50 133 95 61 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 178 100 122 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -3 160 94 1) (list 67 135 117 79 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -26 160 106 1) (list 69 193 117 77 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -72 42 84 1) (list 63 -18 127 108 1) (list 60 61 100 93 1) (list 62 194 133 104 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -3 143 88 1) (list 65 162 116 85 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 6 138 104 1) (list 68 182 127 106 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 0 155 84 1) (list 72 166 164 89 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 5 89 1) (list 74 1 122 88 1) (list 77 166 133 119 1) (list 75 192 32 84 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 6 171 45 1) (list 73 177 122 78 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -4 133 96 1) (list 79 208 111 122 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 78 181 106 103 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 10 149 96 1) (list 74 192 123 103 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 16 111 86 1) (list 70 187 133 114 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 6 164 85 1) (list 67 176 112 90 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -10 107 100 1) (list 70 97 138 81 1) (list 69 198 133 61 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 32 61 1) (list 67 5 111 88 1) (list 69 159 101 102 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 4 219 98 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -96 43 49 1) (list 71 -6 182 103 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -102 68 27 1) (list 67 -102 68 29 1) (list 74 14 321 115 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 67 115 1) (list 72 31 96 86 1) (list 70 100 106 90 1) (list 67 195 96 89 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -22 160 99 1) (list 61 15 58 34 1) (list 62 202 129 85 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 46 85 1) (list 60 153 148 80 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 20 116 89 1) (list 63 127 149 93 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -87 154 45 1) (list 60 25 139 90 1) (list 62 205 124 97 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 63 97 1) (list 63 67 145 88 1) (list 62 180 133 47 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -28 106 96 1) (list 58 185 145 106 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -58 0 26 106 1) (list 59 20 133 72 1) (list 61 180 154 101 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -5 138 80 1) (list 64 144 122 112 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -22 133 82 1) (list 67 137 129 98 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -22 148 88 1) (list 70 152 149 113 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -17 133 92 1) (list 74 147 139 110 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -17 143 99 1) (list 77 142 143 95 1) (list 76 185 43 47 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -18 182 99 1) (list 74 217 113 60 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 19 60 1) (list 77 94 171 118 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -7 181 103 1) (list 75 217 32 91 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -69 106 82 1) (list 76 -43 63 25 1) (list 75 -6 116 89 1) (list 74 110 133 81 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -84 149 101 1) (list 74 119 159 104 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 2 138 117 1) (list 75 209 120 111 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 29 111 1) (list 74 78 123 103 1) (list 75 178 112 87 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -51 134 55 1) (list 73 61 154 88 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -67 123 97 1) (list 79 215 114 108 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 8 108 1) (list 81 114 133 126 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -9 160 106 1) (list 82 113 216 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -82 0 331 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -82 0 246 97 1) (list 81 204 68 84 1)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 80 -67 123 75 1) (list 79 35 123 104 1) (list 84 204 126 127 1)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -84 0 2 127 1) (list 82 40 127 99 1) (list 81 204 111 104 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -81 0 43 104 1) (list 79 49 133 99 1) (list 77 208 116 102 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 38 128 84 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -101 117 86 1) (list 72 43 138 72 1) (list 70 224 111 93 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -70 0 86 93 1) (list 69 144 106 74 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -80 149 77 1) (list 69 49 191 76 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -80 123 118 1) (list 69 33 80 76 1) (list 67 123 112 67 1) (list 65 219 111 91 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 1 91 1) (list 63 96 138 94 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -20 122 81 1) (list 62 6 180 88 1) (list 60 219 110 97 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 1 97 1) (list 58 92 218 76 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 6 191 91 1) (list 55 219 141 82 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 330 82 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 330 82 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 330 82 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 330 82 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 82 82 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -78 102 95 1) (list 57 41 106 90 1) (list 58 174 116 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 59 -46 117 69 1) (list 61 72 111 109 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -94 84 62 1) (list 64 -74 43 63 1) (list 66 1 48 43 1) (list 67 22 53 78 1) (list 65 49 58 33 1) (list 71 129 96 98 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127) for val in (list (list 111 109 107 25 21 17 13 9 5 1) (list 5 2) (list 5 3) (list 5 4) (list 5) (list 9 6) (list 9 7) (list 9 8) (list 9) (list 97 13 10) (list 97 13 11) (list 97 13 12) (list 97 93 13) (list 117 17 14) (list 117 17 15) (list 117 17 16) (list 117 17) (list 21 18) (list 21 19) (list 21 20) (list 21) (list 25 22) (list 25 23) (list 25 24) (list 25) (list 107 65 33 26) (list 107 65 33 27) (list 65 33 28) (list 65 33 29) (list 65 33 30) (list 65 33 31) (list 65 33 32) (list 65 33) (list 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 93 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 97 94) (list 97 95) (list 97 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 109 108) (list 109) (list 111 110) (list 111) (list 113 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 0 13 14 15 0 17 18 19 0 21 22 23 0 25 26 27 28 29 30 31 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 93 94 95 17 18 19 20 21 22 23 24 25 26 0 107 0 109 0 111 13 14 15 16 21 22 23 24 25 26 27 28 29 30 31 32) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 93 15 94 16 95 17 18 19 20 21 22 23 24 -1 25 26 27 28 107 29 30 109 31 32 111 33 34 35 36 37 38 39 40 41 42 43 44) for val in (list 111 33 34 35 36 37 38 39 40 41 42 43 93 113 114 94 115 95 116 96 97 98 99 100 117 118 119 120 0 121 122 123 124 108 125 126 110 127 128 112 81 82 83 84 85 86 87 88 89 90 91 92) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 4 5 6 7 1 2 3 4 5 6 7 8 9 10 0 1 0 1 0 1 1 2 3 4 1 2 3 4 5 6 7 8 9 10 11 12 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 128 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 127 :navigationmode (quote continuity) :currentstateidx 128 :prevstateidx 127 :max-continuity 1000 :start-region (list 0 128) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :useestrada nil :usehindemith nil :refharmgrid nil :harmgridlength 48 :beats/measure 4 :reftempo 330 :currenttranspo 0 :lengthfactorsfromgrid (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t))