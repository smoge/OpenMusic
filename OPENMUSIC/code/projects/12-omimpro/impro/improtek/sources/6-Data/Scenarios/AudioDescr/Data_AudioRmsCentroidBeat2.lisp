(in-package :om)


; A rajouter dans le code matlab :
;- ligne setf XXX_desc_values (quote (...))


;Mobile_Partie1
;--------------------------------------------------------------------------------------------------------------------
(setf 
	Mobile_Partie1_grid (quote ((3 4)(2 4)(3 4)(2 4)(2 4)(1 3)(1 2)(1 2)(1 3)(2 4)(3 4)(3 4)(2 4)(3 4)(3 4)(3 4)(3 4)(2 3)(1 2)(1 4)(3 4)(4 3)(4 4)(4 3)(3 4)(3 4)(2 3)(2 3)(2 2)(1 3)(1 2)(1 2)(1 1)(1 2)(1 3)(1 3)(1 2)(1 1)(1 2)(1 4)(1 3)(1 3)(1 2)(3 1)(3 3)(4 3)(2 2)(1 2)(1 2)(1 2)(1 2)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(2 1)(2 1)(1 1)(2 1)(2 1)(1 1)(2 1)(1 2)(1 2)(2 2)(1 3)(1 2)(2 2)(2 1)(1 2)(2 3)(2 1)(2 1)(2 1)(2 1)(2 2)(2 2)(2 2)(1 2)(2 2)(2 2)(2 1)(2 1)(2 1)(2 2)(2 2)(2 2)(2 1)(3 2)(3 1)(2 1)(1 2)(2 3)(3 2)(2 2)(2 2)(1 2)(1 1)(1 1)(1 2)(1 2)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1) ) )

	Mobile_Partie1_beatdur (bpmtobeatdur 117)
        Mobile_Partie1_RMS_values
        '(0.022991 0.040532 0.060710 0.120348))

(loop for i from 0 to (- (list-length Mobile_Partie1_grid) 1) do
      (setf (nth i Mobile_Partie1_grid) 
            (list 
             (- (nth 0 (nth i Mobile_Partie1_grid)) 1)
             (- (nth 1 (nth i Mobile_Partie1_grid)) 1))))

(setf Mobile_Partie1_tune (make-instance (quote realtimetune) :grid Mobile_Partie1_grid :chapters (quote (1)) :beatduration Mobile_Partie1_beatdur :tunename "Mobile_Partie1" :NbBeatsPerMeasure 4 :DataFromAnalysis Mobile_Partie1_RMS_values))
(setf (gethash (quote "Mobile_Partie1") *available-grids*) Mobile_Partie1_tune)

;Mobile_Partie2
;--------------------------------------------------------------------------------------------------------------------
(setf 
	Mobile_Partie2_grid (quote ((4 2)(4 2)(2 1)(2 1)(1 1)(1 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(4 1)(1 1)(1 1)(1 1)(1 1)(1 4)(2 3)(1 3)(1 3)(1 3)(1 1)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(3 4)(3 1)(3 4)(3 3)(2 3)(2 2)(4 2)(2 2)(1 2)(1 1)(1 1)(1 1)(2 1)(3 2)(1 1)(1 1)(1 1)(1 1)(1 3)(1 2)(1 3)(1 3)(1 2)(2 1)(4 3)(3 1)(3 4)(3 4)(2 1)(1 1)(1 1)(1 1)(1 1)(1 2)(3 4)(1 2)(2 1)(1 1)(1 3)(1 2)(1 2)(1 2)(2 1)(3 2)(2 1)(3 3)(1 3)(1 1)(1 1)(1 2)(1 1)(2 2)(1 2)(1 2)(1 1)(1 1)(1 2)(4 2)(4 2)(2 1)(1 3)(1 1)(1 1)(1 1)(1 2)(1 2)(1 3)(4 2)(2 3)(3 1)(3 1)(1 1)(1 4)(2 2)(1 2)(1 2)(1 2)(1 2)(4 2)(4 1)(3 1)(3 4)(1 2)(1 2)(1 1)(1 1)(1 2)(4 2)(2 2)(1 1)(3 3)(2 1)(2 2)(1 1)(1 1)(3 1)(4 4)(1 2)(1 1)(1 1)(4 2)(2 3)(4 1)(2 2)(1 1)(1 1)(3 3)(2 2)(1 2)(1 2)(4 1)(2 3)(3 4)(2 3)(3 4)(2 2)(1 1)(1 1)(1 1)(4 4)(2 2)(2 1)(2 1)(1 1)(2 3)(4 3)(3 1)(3 2)(3 1)(2 2)(1 2)(1 1)(1 1)(4 3)(3 2)(1 1)(1 1)(4 4)(4 4)(4 4)(3 4)(1 3)(1 2)(4 3)(2 2)(1 2)(1 1)(1 1)(3 3)(3 2)(3 2)(3 2)(1 1)(1 1)(4 3)(4 2)(1 1)(1 1)(4 3)(3 1)(1 2)(1 1)(3 3)(4 4)(4 3)(3 4)(1 2)(1 2)(3 3)(4 2)(1 1)(2 3)(2 3)(2 3)(3 3)(1 2)(1 1)(1 1)(3 2)(2 1)(1 1)(3 2)(2 1)(1 1)(1 1)(3 2)(4 3)(2 2)(1 2)(4 1)(3 1)(1 1)(1 1)(3 3)(3 3)(2 2)(1 2)(1 2)(3 4)(4 2)(3 1)(1 1)(1 1)(2 1)(3 3)(1 2)(1 2)(1 1)(3 3)(2 4)(2 2)(1 2)(1 2)(4 4)(3 2)(1 1)(1 3)(4 3)(2 2)(1 1)(1 1)(2 2)(1 1)(1 1)(3 2)(4 2)(3 4)(1 2)(1 1)(1 2)(3 3)(1 2)(1 1)(4 2)(3 4)(2 1)(1 1)(1 1)(2 2)(2 4)(1 3)(1 2)(1 2)(3 4)(3 3)(2 2)(1 2)(1 2)(2 1)(1 1)(1 1)(3 2)(2 1)(1 1)(2 3)(3 2)(1 1)(1 1)(2 4)(2 1)(1 2)(1 1)(1 1)(3 1)(1 1)(1 1)(3 3)(3 2)(2 1)(2 1)(1 1)(1 1)(1 1)(2 4)(2 2)(1 1)(3 3)(3 3)(1 2)(1 1)(1 1)(1 2)(3 2)(2 2)(2 2)(1 1)(1 1)(1 1)(1 3)(2 2)(1 2)(1 2)(3 2)(1 1)(1 1)(1 1)(1 4)(1 2)(1 2)(1 3)(1 2)(1 2)(1 2)(2 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(2 3)(1 1)(1 1)(1 2)(1 3)(1 2)(1 2)(1 2)(1 1)(1 1)(1 4)(3 1)(1 1)(1 1)(1 2)(1 3)(1 3)(1 2)(1 4)(1 3)(1 2)(2 1)(1 3)(1 2)(1 2)(1 2)(2 4)(1 2)(1 1)(1 3)(1 3)(2 2)(2 3)(2 3)(1 2)(1 2)(1 2)(3 2)(3 1)(1 1)(1 3)(1 2)(1 2)(1 3)(1 2)(1 2)(1 2)(1 2)(2 2)(2 1)(1 1)(1 1)(1 1)(2 3)(2 2)(1 1)(1 1)(1 2)(1 2)(3 1)(1 2)(1 1)(1 2)(1 2)(2 2)(3 2)(1 1)(1 1)(1 1)(1 2)(1 4)(3 1)(1 3)(1 2)(1 2)(1 2)(1 3)(1 2)(1 2)(1 2)(1 2)(1 3)(1 2)(1 2)(1 4)(1 2)(1 2) ) )
	Mobile_Partie2_beatdur (bpmtobeatdur 176)
        Mobile_Partie2_RMS_values
        '(0.016409 0.042834 0.071280 0.108459))

(loop for i from 0 to (- (list-length Mobile_Partie2_grid) 1) do
      (setf (nth i Mobile_Partie2_grid) 
            (list 
             (- (nth 0 (nth i Mobile_Partie2_grid)) 1)
             (- (nth 1 (nth i Mobile_Partie2_grid)) 1))))

(setf Mobile_Partie2_tune (make-instance (quote realtimetune) :grid Mobile_Partie2_grid :chapters (quote (1)) :beatduration Mobile_Partie2_beatdur :tunename "Mobile_Partie2" :NbBeatsPerMeasure 4 :DataFromAnalysis Mobile_Partie2_RMS_values))
(setf (gethash (quote "Mobile_Partie2") *available-grids*) Mobile_Partie2_tune)

;Mobile_Partie3
;--------------------------------------------------------------------------------------------------------------------
(setf 
	Mobile_Partie3_grid (quote ((1 2)(1 2)(1 1)(1 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 2)(1 1)(1 1)(1 1)(4 1)(4 1)(2 2)(1 1)(1 1)(1 3)(1 3)(2 2)(1 2)(4 1)(2 1)(1 1)(1 1)(1 1)(3 1)(3 2)(3 1)(2 2)(1 2)(1 2)(1 1)(1 4)(2 3)(1 1)(1 2)(1 2)(2 1)(2 3)(2 2)(1 3)(1 3)(1 2)(1 2)(3 1)(2 2)(1 1)(1 1)(1 4)(1 2)(1 2)(2 1)(2 1)(2 3)(3 3)(3 3)(3 2)(3 2)(2 1)(3 1)(2 1)(1 1)(1 3)(2 2)(3 3)(2 1)(3 2)(4 1)(4 1)(4 1)(3 1)(3 2)(3 1)(2 3)(2 2)(1 2)(3 3)(3 3)(3 3)(3 2)(3 2)(3 1)(4 1)(3 1)(2 1)(3 2)(3 2)(4 3)(4 3)(3 3)(3 2)(3 3)(3 2)(3 2)(3 1)(2 1)(2 2)(4 1)(3 1)(3 2)(3 2)(3 2)(3 3)(4 2)(4 2)(4 2)(3 1)(3 2)(3 3)(3 2)(3 3)(3 4)(2 3)(2 2)(2 2)(2 1)(2 1)(2 2)(2 2)(3 2)(2 1)(1 2)(1 2)(2 3)(3 4)(2 4)(2 2)(2 2)(2 2)(3 2)(3 3)(3 3)(3 3)(3 2)(2 2)(2 2)(2 1)(1 2)(3 2)(3 2)(3 2)(2 1)(2 2)(2 2)(2 2)(1 2)(1 2)(1 3)(1 2)(1 1)(1 2)(1 3)(1 3)(1 3)(1 4)(1 4)(1 3)(2 3)(1 3)(1 3)(2 1)(1 2)(1 2)(1 2)(2 3)(2 3)(2 3)(1 2)(1 3)(1 3)(1 2)(1 1)(1 2)(1 2)(1 2)(1 1)(1 1)(1 1)(1 1)(1 1)(1 2)(1 2)(1 3)(1 3)(1 4)(2 1)(1 2)(1 2)(1 2)(1 4)(1 2)(1 2)(1 2)(1 3)(1 3)(2 2)(1 2)(1 2)(1 2)(1 1)(1 1)(1 1)(1 1)(1 1)(1 2)(1 2)(1 2)(1 2)(2 1)(1 3)(1 3)(1 4)(1 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 1)(1 1)(1 2)(1 2)(1 2)(1 2)(1 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 1)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(2 1)(1 1)(1 2)(1 2)(1 2)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 1)(1 1)(1 2)(1 2)(1 2)(1 3)(1 3)(1 3)(2 3)(1 2)(1 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(3 3)(3 4)(3 3)(2 3)(1 3)(2 3)(1 3)(1 3)(1 3)(1 3)(1 2)(1 3)(3 4)(3 4)(2 4)(1 3)(2 3)(1 3)(1 2)(1 3)(1 2)(1 2)(2 3)(4 4)(4 4)(3 4)(3 3)(2 3)(1 3)(2 3)(1 3)(1 3)(1 3)(1 3)(1 3)(2 4)(4 4)(4 4)(3 4)(4 4)(3 3)(3 3)(2 3)(2 3)(1 3)(1 3)(1 3)(1 3)(2 4)(3 4)(2 4)(2 4)(2 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 2)(1 3)(1 4)(1 4)(2 4)(2 4)(1 4)(2 4)(2 4)(1 4)(1 4)(1 4)(2 4)(2 3)(2 3)(1 3)(1 3)(1 2)(1 2)(1 3)(1 2)(1 3)(1 3)(1 3)(1 4)(1 4)(2 4)(1 4)(1 4)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 3)(1 4)(1 4)(1 3)(1 3)(1 4)(1 4)(1 4)(1 4)(1 3)(1 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 3)(1 2) ) )
	Mobile_Partie3_beatdur (bpmtobeatdur 120)
        Mobile_Partie3_RMS_values
        '(0.017057 0.042679 0.074539 0.118295))

(loop for i from 0 to (- (list-length Mobile_Partie3_grid) 1) do
      (setf (nth i Mobile_Partie3_grid) 
            (list 
             (- (nth 0 (nth i Mobile_Partie3_grid)) 1)
             (- (nth 1 (nth i Mobile_Partie3_grid)) 1))))

(setf Mobile_Partie3_tune (make-instance (quote realtimetune) :grid Mobile_Partie3_grid :chapters (quote (1)) :beatduration Mobile_Partie3_beatdur :tunename "Mobile_Partie3" :NbBeatsPerMeasure 4 :DataFromAnalysis Mobile_Partie3_RMS_values))
(setf (gethash (quote "Mobile_Partie3") *available-grids*) Mobile_Partie3_tune)

;Mobile_Tot
;--------------------------------------------------------------------------------------------------------------------
(setf 
	Mobile_Tot_grid (quote ((1 4)(1 4)(1 3)(1 2)(1 2)(3 3)(2 3)(3 3)(2 3)(2 3)(2 2)(1 2)(1 1)(1 1)(1 2)(3 3)(3 3)(2 3)(3 3)(3 3)(2 3)(3 3)(2 2)(1 1)(1 2)(2 3)(4 2)(4 3)(4 2)(4 3)(3 3)(2 2)(2 2)(2 1)(2 2)(1 1)(1 1)(1 1)(1 1)(1 2)(1 2)(1 2)(1 1)(1 1)(1 1)(1 3)(1 2)(1 2)(1 1)(3 1)(4 2)(3 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(2 1)(2 1)(1 1)(2 1)(1 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(1 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 4)(4 2)(4 2)(2 1)(1 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(3 2)(1 1)(1 1)(1 1)(1 3)(1 3)(1 3)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(3 3)(3 2)(3 4)(2 2)(3 2)(2 2)(1 2)(1 1)(1 1)(3 3)(1 1)(1 1)(1 2)(1 2)(1 3)(1 3)(3 2)(3 1)(3 3)(3 2)(1 1)(1 1)(1 1)(2 4)(2 2)(1 1)(1 3)(1 2)(1 2)(2 2)(3 2)(3 3)(1 2)(1 1)(1 2)(1 3)(1 2)(1 2)(1 1)(2 1)(4 2)(2 1)(1 3)(1 1)(1 2)(1 2)(2 4)(3 3)(3 1)(2 1)(1 4)(2 2)(1 2)(1 2)(4 2)(4 2)(3 4)(1 2)(1 2)(1 1)(3 2)(3 2)(3 2)(2 2)(2 2)(1 1)(4 3)(1 2)(1 1)(3 2)(3 2)(3 3)(1 2)(2 3)(1 2)(2 2)(4 2)(3 4)(2 4)(2 1)(1 1)(4 3)(2 2)(1 1)(1 1)(4 3)(3 2)(3 1)(2 2)(1 2)(3 4)(4 3)(1 1)(4 3)(4 4)(4 4)(1 3)(3 3)(1 2)(1 1)(3 2)(3 3)(3 4)(2 1)(1 2)(4 2)(1 2)(3 3)(2 2)(1 2)(4 3)(4 3)(3 4)(1 2)(4 3)(2 2)(2 4)(2 2)(3 3)(1 2)(1 2)(2 2)(2 4)(3 2)(1 1)(3 2)(3 3)(1 2)(4 2)(2 1)(2 2)(3 3)(1 2)(1 2)(3 3)(4 2)(1 1)(2 2)(3 2)(1 2)(2 1)(3 4)(2 3)(1 2)(4 3)(1 2)(2 4)(3 1)(1 2)(2 2)(1 1)(2 3)(4 3)(1 2)(1 1)(3 3)(1 2)(2 2)(3 3)(1 1)(1 1)(2 3)(2 4)(1 2)(2 4)(3 3)(1 2)(1 2)(2 1)(1 1)(2 2)(2 1)(2 2)(1 1)(2 4)(2 2)(1 2)(1 1)(2 2)(1 1)(3 3)(2 2)(2 1)(1 1)(1 1)(2 4)(1 2)(3 3)(2 3)(1 2)(1 1)(2 2)(2 2)(1 2)(1 1)(1 1)(2 3)(1 2)(2 3)(2 1)(1 1)(1 4)(1 2)(1 2)(1 2)(1 2)(2 3)(1 3)(1 2)(1 3)(1 2)(1 2)(1 3)(2 2)(1 2)(1 3)(1 2)(1 2)(1 2)(1 4)(3 1)(1 1)(1 2)(1 2)(1 2)(1 3)(1 2)(2 3)(1 2)(1 2)(2 4)(1 2)(1 4)(1 3)(2 3)(2 4)(1 2)(1 2)(3 2)(2 2)(1 3)(1 2)(1 2)(1 2)(1 2)(1 2)(2 1)(1 1)(1 1)(1 3)(2 2)(1 1)(1 1)(2 2)(2 2)(1 2)(1 2)(1 2)(3 2)(1 2)(1 1)(1 2)(3 4)(1 3)(1 2)(1 2)(1 3)(1 3)(1 2)(1 2)(1 2)(1 2)(1 3)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 1)(1 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 4)(1 1)(1 1)(1 1)(4 1)(4 2)(2 2)(1 2)(1 1)(1 4)(1 3)(1 2)(1 3)(4 1)(1 1)(1 1)(1 2)(1 2)(3 1)(2 2)(3 1)(2 3)(1 3)(1 2)(1 2)(1 4)(1 3)(1 2)(1 3)(1 2)(2 1)(2 3)(2 3)(1 3)(1 3)(1 3)(1 3)(3 1)(2 2)(1 1)(1 1)(1 4)(1 3)(2 1)(2 1)(2 2)(2 4)(3 3)(3 3)(3 3)(3 2)(2 2)(4 1)(1 2)(1 2)(1 3)(3 3)(2 3)(2 2)(4 2)(4 2)(4 2)(4 2)(3 2)(3 3)(3 2)(2 3)(1 2)(2 3)(3 3)(3 3)(4 3)(3 3)(3 3)(3 1)(4 1)(3 1)(2 1)(3 2)(3 2)(4 3)(4 3)(3 3)(3 3)(3 3)(3 3)(3 3)(3 1)(2 1)(3 2)(4 2)(3 2)(3 3)(3 3)(3 3)(3 3)(4 2)(4 3)(4 2)(3 2)(3 2)(3 3)(3 2)(3 3)(3 4)(2 3)(2 3)(2 2)(2 2)(2 1)(2 2)(3 3)(3 2)(2 2)(1 3)(1 3)(3 3)(3 4)(2 4)(2 2)(2 2)(2 3)(3 3)(3 3)(3 3)(3 3)(3 2)(2 2)(2 2)(2 2)(1 3)(4 3)(4 2)(3 2)(2 2)(3 2)(2 2)(2 3)(1 3)(1 3)(1 3)(1 2)(1 2)(1 3)(1 4)(1 3)(1 3)(1 4)(1 4)(2 3)(2 3)(1 3)(1 3)(2 2)(1 3)(1 2)(1 3)(2 3)(2 3)(1 4)(1 3)(1 3)(1 3)(1 3)(1 1)(1 2)(1 2)(1 2)(1 2)(1 2)(1 1)(1 1)(1 2)(1 2)(1 2)(1 4)(1 4)(1 4)(2 2)(1 2)(1 2)(1 2)(1 4)(1 2)(1 3)(1 2)(1 4)(1 3)(2 2)(1 3)(1 3)(1 2)(1 2)(2 1)(1 1)(1 1)(1 1)(1 3)(1 2)(1 2)(1 2)(2 2)(1 3)(1 3)(1 4)(1 3)(1 3)(1 3)(1 2)(1 2)(1 3)(1 1)(1 2)(1 2)(1 2)(1 3)(1 3)(1 4)(1 4)(1 4)(1 4)(1 4)(1 3)(1 2)(1 2)(1 3)(1 2)(1 1)(1 2)(1 3)(1 3)(2 1)(1 1)(1 2)(1 2)(1 3)(1 3)(1 4)(1 3)(1 4)(1 4)(1 4)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 3)(1 2)(1 3)(1 2)(1 2)(1 1)(1 2)(1 3)(1 3)(1 2)(1 3)(1 3)(2 3)(2 3)(1 3)(1 3)(1 3)(1 2)(1 3)(1 2)(1 3)(1 2)(1 2)(1 2)(3 4)(3 4)(3 4)(2 3)(2 3)(2 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(3 4)(3 4)(2 4)(1 4)(2 3)(1 3)(1 3)(1 3)(1 2)(1 2)(2 3)(4 4)(4 4)(4 4)(3 4)(2 4)(2 3)(2 3)(1 3)(1 3)(1 3)(1 3)(1 3)(2 4)(4 4)(4 4)(3 4)(4 4)(3 4)(3 3)(2 3)(2 3)(1 3)(1 3)(1 3)(1 4)(2 4)(3 4)(2 4)(2 4)(1 4)(1 3)(1 3)(1 3)(1 3)(1 4)(1 3)(1 3)(1 4)(1 3)(1 3)(1 3)(1 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(1 4)(1 4)(2 4)(2 4)(1 4)(2 4)(2 4)(1 4)(1 4)(1 4)(2 4)(2 3)(2 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(2 4)(2 4)(1 4)(1 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(1 4)(1 4)(1 3)(1 3)(1 4)(1 4)(1 4)(1 4)(1 4)(1 3)(1 3)(1 3)(1 3)(1 2)(1 3)(1 3)(1 2)(1 3)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 2)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(1 4)(1 4)(1 4)(1 4) ) )
	Mobile_Tot_beatdur (bpmtobeatdur 120)
        Mobile_Tot_RMS_values
        '(0.017075 0.042225 0.070819 0.109392))

(loop for i from 0 to (- (list-length Mobile_Tot_grid) 1) do
      (setf (nth i Mobile_Tot_grid) 
            (list 
             (- (nth 0 (nth i Mobile_Tot_grid)) 1)
             (- (nth 1 (nth i Mobile_Tot_grid)) 1))))

(setf Mobile_Tot_tune (make-instance (quote realtimetune) :grid Mobile_Tot_grid :chapters (quote (1)) :beatduration Mobile_Tot_beatdur :tunename "Mobile_Tot" :NbBeatsPerMeasure 4 :DataFromAnalysis Mobile_Tot_RMS_values))
(setf (gethash (quote "Mobile_Tot") *available-grids*) Mobile_Tot_tune)


;Mobile_Tot_MoreClasses
;--------------------------------------------------------------------------------------------------------------------
(setf 
	Mobile_Tot_MoreClasses_grid (quote ((1 8)(1 7)(1 5)(1 4)(1 3)(3 5)(3 5)(4 5)(3 5)(3 5)(2 4)(1 2)(1 2)(1 2)(2 4)(4 5)(4 5)(3 5)(3 5)(4 5)(3 4)(4 5)(3 4)(2 2)(1 3)(3 5)(6 4)(6 4)(6 4)(5 4)(4 4)(3 3)(3 3)(2 2)(2 3)(2 2)(1 2)(1 1)(1 1)(1 3)(1 4)(1 3)(1 1)(1 1)(1 1)(1 4)(1 3)(1 3)(1 2)(4 1)(6 4)(4 2)(2 2)(2 2)(2 1)(1 2)(1 1)(1 1)(1 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(2 1)(2 1)(2 1)(2 1)(2 1)(3 1)(1 1)(2 1)(2 1)(2 1)(2 1)(2 2)(2 2)(2 1)(2 1)(2 1)(2 1)(3 2)(3 1)(3 1)(3 1)(3 1)(3 2)(2 2)(2 2)(2 2)(2 1)(3 1)(3 1)(3 1)(3 1)(3 2)(3 2)(3 2)(3 1)(3 2)(3 1)(2 1)(2 2)(2 2)(3 2)(2 1)(2 2)(2 1)(2 1)(2 1)(2 2)(1 2)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 1)(1 2)(1 2)(1 2)(1 7)(5 3)(5 3)(3 2)(1 1)(2 1)(3 1)(3 1)(2 1)(1 1)(1 1)(1 1)(1 1)(5 3)(1 2)(1 1)(1 2)(2 5)(1 5)(1 5)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 1)(4 6)(4 3)(4 6)(3 3)(5 3)(2 3)(1 2)(1 1)(1 2)(4 4)(1 2)(1 2)(1 3)(1 3)(1 5)(1 4)(4 2)(4 2)(4 5)(4 3)(1 2)(1 2)(1 2)(3 7)(2 3)(2 2)(2 6)(1 4)(1 3)(2 3)(4 3)(4 5)(2 3)(1 2)(1 3)(2 4)(1 3)(1 3)(1 2)(3 2)(6 4)(2 2)(1 4)(1 2)(1 3)(1 3)(3 6)(4 4)(4 2)(3 2)(1 6)(2 4)(1 3)(1 3)(5 3)(5 2)(4 6)(1 4)(1 3)(1 2)(4 3)(4 3)(4 3)(2 4)(2 4)(1 2)(5 5)(2 3)(1 2)(5 4)(4 3)(4 4)(1 3)(3 6)(2 4)(2 3)(5 3)(4 6)(3 8)(2 2)(1 2)(6 5)(3 3)(2 1)(1 1)(6 5)(4 3)(5 2)(3 3)(1 2)(4 6)(5 5)(1 2)(6 6)(5 7)(5 8)(1 4)(4 5)(2 3)(1 2)(4 4)(4 5)(4 7)(2 2)(2 3)(6 4)(1 2)(4 6)(3 3)(1 2)(5 5)(5 4)(4 6)(1 3)(5 5)(3 3)(2 7)(3 4)(4 5)(1 3)(2 3)(3 3)(2 7)(4 3)(1 2)(4 2)(4 5)(1 3)(5 3)(2 2)(3 4)(4 5)(2 3)(1 3)(4 4)(5 3)(1 2)(3 3)(3 3)(1 3)(2 1)(3 6)(2 4)(1 3)(5 6)(2 3)(3 6)(4 2)(1 2)(3 2)(1 2)(3 5)(5 4)(2 4)(1 2)(4 4)(2 3)(3 3)(5 6)(2 2)(1 2)(3 5)(2 7)(1 3)(2 6)(5 5)(2 4)(1 3)(3 2)(1 1)(3 4)(2 2)(3 3)(1 2)(2 7)(3 3)(1 3)(1 2)(3 3)(1 2)(4 5)(3 3)(3 2)(1 2)(1 2)(2 6)(1 3)(3 5)(3 4)(1 3)(1 2)(3 3)(3 3)(2 3)(1 2)(1 2)(3 4)(1 4)(3 4)(2 2)(1 2)(1 6)(1 3)(1 3)(1 3)(1 3)(2 4)(1 4)(1 4)(1 5)(1 3)(1 3)(1 6)(2 3)(1 2)(1 5)(2 3)(1 4)(1 3)(1 6)(3 2)(1 2)(1 3)(2 3)(1 3)(1 5)(1 4)(2 4)(1 4)(1 3)(2 6)(1 4)(1 6)(1 5)(2 4)(3 7)(1 3)(1 2)(4 4)(2 3)(1 4)(2 3)(2 3)(1 3)(1 3)(1 3)(3 2)(1 2)(1 2)(1 5)(3 3)(1 2)(1 2)(3 4)(3 3)(1 2)(1 3)(1 3)(4 3)(1 2)(1 2)(1 3)(3 7)(2 5)(1 3)(1 3)(1 5)(1 4)(1 3)(1 3)(2 3)(1 4)(1 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(2 1)(1 1)(1 1)(1 1)(1 8)(1 2)(1 1)(1 2)(6 2)(5 3)(2 3)(1 3)(1 2)(1 7)(2 5)(2 4)(1 5)(6 1)(2 2)(1 2)(1 3)(1 3)(5 1)(3 4)(4 2)(2 4)(1 4)(1 3)(1 3)(2 8)(2 4)(1 3)(1 4)(1 3)(3 1)(3 5)(3 4)(2 5)(1 5)(1 4)(1 5)(5 2)(3 3)(1 2)(1 2)(1 6)(1 4)(2 2)(2 2)(2 3)(3 6)(4 5)(4 5)(4 4)(4 3)(3 3)(5 1)(2 3)(1 3)(2 5)(4 4)(3 5)(3 3)(5 3)(6 2)(6 4)(6 3)(4 3)(4 4)(3 3)(3 6)(2 4)(2 5)(4 5)(4 5)(5 4)(4 4)(5 4)(4 2)(5 2)(3 2)(2 2)(5 3)(4 4)(5 4)(5 5)(4 5)(5 4)(4 5)(4 4)(4 4)(4 2)(3 2)(3 3)(6 2)(4 3)(4 5)(4 4)(4 5)(5 6)(5 4)(5 4)(5 3)(4 3)(4 4)(4 5)(4 4)(4 6)(4 6)(3 6)(3 4)(3 4)(3 3)(3 2)(3 4)(3 4)(4 3)(2 2)(2 4)(2 4)(4 6)(4 7)(3 7)(3 3)(2 4)(3 5)(4 4)(4 5)(4 5)(4 5)(4 4)(3 4)(3 3)(2 2)(2 4)(5 4)(5 3)(4 3)(3 3)(3 3)(3 4)(2 4)(2 5)(1 4)(2 5)(2 4)(1 3)(2 4)(2 6)(1 5)(1 5)(2 7)(2 6)(2 5)(2 5)(2 5)(1 5)(3 3)(1 5)(1 4)(2 4)(2 5)(3 5)(2 6)(2 4)(1 5)(1 5)(1 4)(2 2)(1 3)(1 3)(1 4)(1 2)(1 3)(1 2)(1 2)(1 3)(1 4)(2 3)(2 6)(2 6)(2 7)(3 3)(1 3)(1 3)(1 3)(1 8)(1 3)(2 4)(1 3)(1 6)(2 5)(2 4)(2 4)(2 5)(2 3)(1 3)(2 1)(1 1)(1 1)(1 2)(1 4)(1 3)(1 3)(1 4)(2 3)(1 5)(1 5)(1 6)(1 6)(1 6)(1 4)(1 3)(1 4)(1 4)(2 2)(1 3)(1 3)(1 3)(1 4)(1 5)(1 7)(1 6)(1 6)(1 6)(1 6)(2 4)(1 3)(1 3)(1 4)(1 4)(1 2)(1 4)(1 4)(1 4)(2 2)(1 2)(1 3)(1 3)(1 4)(1 5)(1 6)(1 5)(1 6)(1 6)(1 6)(1 6)(1 5)(1 5)(1 3)(1 5)(1 5)(1 5)(1 4)(2 4)(1 3)(1 2)(1 2)(1 3)(1 4)(1 5)(1 3)(1 5)(1 5)(2 5)(3 5)(2 4)(2 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 3)(1 3)(2 4)(4 6)(4 6)(4 6)(2 6)(2 5)(2 5)(2 5)(1 6)(1 6)(1 5)(1 4)(2 5)(4 6)(4 7)(3 6)(2 6)(2 5)(1 5)(1 4)(1 5)(1 4)(1 3)(3 6)(5 6)(5 6)(5 6)(4 6)(2 6)(2 5)(2 5)(1 5)(1 5)(1 5)(1 5)(1 5)(3 7)(6 6)(5 7)(5 6)(5 6)(5 6)(4 5)(3 5)(2 5)(1 5)(1 5)(1 5)(1 6)(3 8)(4 8)(2 8)(2 7)(2 7)(1 5)(1 5)(1 5)(1 5)(1 6)(1 5)(1 5)(1 6)(1 4)(1 4)(1 6)(1 6)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 4)(1 5)(1 4)(1 4)(1 4)(1 4)(1 7)(1 8)(2 7)(2 7)(2 7)(2 7)(2 7)(2 7)(2 7)(2 6)(2 7)(2 6)(3 5)(2 5)(2 5)(1 5)(1 4)(1 4)(1 5)(1 4)(1 5)(1 5)(1 5)(1 8)(2 6)(3 7)(1 7)(1 7)(1 6)(1 5)(1 5)(1 4)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 5)(1 6)(1 7)(1 7)(1 6)(1 6)(1 6)(1 6)(1 7)(1 6)(1 6)(1 5)(1 5)(1 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 4)(1 3)(1 4)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 3)(1 4)(1 5)(1 4)(1 4)(1 4)(1 5)(1 6)(1 6)(1 7)(1 7)(1 7) ) )
	Mobile_Tot_MoreClasses_beatdur (bpmtobeatdur 120)
        Mobile_Tot_MoreClasses_RMS_values
        '(0.012619 0.029631 0.048755 0.070213 0.096341 0.130995))

(loop for i from 0 to (- (list-length Mobile_Tot_MoreClasses_grid) 1) do
      (setf (nth i Mobile_Tot_MoreClasses_grid) 
            (list 
             (- (nth 0 (nth i Mobile_Tot_MoreClasses_grid)) 1)
             (- (nth 1 (nth i Mobile_Tot_MoreClasses_grid)) 1))))
(setf Mobile_Tot_MoreClasses_tune (make-instance (quote realtimetune) :grid Mobile_Tot_MoreClasses_grid :chapters (quote (1)) :beatduration Mobile_Tot_MoreClasses_beatdur :tunename "Mobile_Tot_MoreClasses" :NbBeatsPerMeasure 4 :DataFromAnalysis Mobile_Tot_MoreClasses_RMS_values))
(setf (gethash (quote "Mobile_Tot_MoreClasses") *available-grids*) Mobile_Tot_MoreClasses_tune)


;ElectricCounterpoint_Fast_2_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	ElectricCounterpoint_Fast_2_RMS10-SC10_grid (quote ((2 3)(2 4)(0 0)(0 0)(0 2)(0 2)(3 5)(1 4)(1 1)(0 3)(2 1)(6 5)(2 4)(1 6)(0 1)(0 3)(3 3)(5 6)(2 3)(0 7)(4 9)(2 1)(0 6)(2 4)(1 5)(0 5)(3 8)(3 3)(0 4)(1 1)(2 4)(5 5)(3 6)(2 3)(0 3)(1 1)(1 2)(5 4)(1 5)(0 2)(0 5)(0 0)(1 3)(2 5)(1 4)(0 1)(0 1)(0 0)(0 2)(1 6)(0 4)(0 2)(0 2)(0 0)(0 2)(1 5)(3 9)(1 1)(2 8)(0 2)(1 5)(1 6)(3 9)(2 1)(2 7)(0 0)(0 2)(1 7)(3 8)(1 1)(2 6)(4 0)(1 2)(1 7)(2 9)(2 2)(2 6)(2 1)(0 2)(1 7)(2 8)(1 3)(2 8)(4 1)(1 4)(4 3)(3 6)(1 4)(3 7)(3 0)(1 4)(4 3)(3 8)(2 1)(3 9)(4 0)(1 4)(4 4)(4 6)(1 2)(2 7)(1 0)(1 4)(2 4)(1 5)(0 4)(1 7)(0 0)(1 6)(2 5)(1 6)(0 3)(1 7)(0 0)(1 6)(1 4)(1 4)(2 2)(3 5)(3 0)(3 3)(7 6)(4 4)(2 0)(8 3)(3 0)(7 4)(6 5)(5 5)(3 1)(8 4)(5 1)(8 4)(8 5)(5 6)(3 1)(9 4)(6 0)(9 3)(9 3)(7 3)(6 0)(9 2)(6 0)(6 7)(9 6)(8 6)(4 1)(9 5)(5 0)(9 1)(9 3)(8 1)(7 0)(9 3)(4 0)(8 4)(6 7)(5 6)(4 2)(8 5)(7 1)(9 2)(7 4)(9 1)(5 1)(9 1)(6 0)(9 3)(7 5)(6 5)(5 2)(9 4)(8 1)(9 3)(8 4)(9 0)(8 1)(9 2)(7 1)(9 5)(7 5)(6 5)(3 3)(7 5)(5 1)(9 2)(8 5)(9 0)(7 1)(8 3)(7 1)(9 3)(5 7)(9 1)(8 1)(8 3)(8 0)(9 2)(8 6)(8 0)(6 2)(7 2)(4 0)(4 2)(4 4)(4 0)(6 0)(4 0)(5 0)(9 5)(5 4)(4 0)(3 2)(2 0)(2 0)(7 8)(6 5)(5 0)(4 1)(2 0)(4 0)(7 7)(6 4)(4 1)(7 7)(3 3)(2 5)(4 7)(4 4)(4 0)(4 1)(3 0)(4 0)(8 8)(7 4)(6 0)(8 7)(4 3)(5 1)(4 5)(3 4)(3 0)(4 1)(2 2)(4 0)(6 6)(8 7)(6 3)(7 5)(4 1)(3 1)(4 7)(3 4)(4 0)(4 1)(2 2)(4 0)(7 4)(7 9)(7 3)(7 3)(4 2)(3 1)(3 7)(3 3)(4 0)(4 2)(2 0)(3 0)(6 4)(6 9)(5 2)(7 4)(5 9)(5 4)(5 5)(3 4)(3 0)(4 1)(2 1)(5 0)(6 4)(7 7)(6 3)(7 4)(4 8)(3 4)(3 7)(3 4)(3 0)(4 1)(3 0)(3 1)(7 3)(7 5)(7 0)(7 4)(5 6)(4 3)(3 4)(4 7)(4 2)(5 1)(4 0)(6 0)(6 3)(8 6)(8 1)(6 4)(3 6)(3 3)(3 4)(3 5)(3 2)(4 1)(2 0)(4 0)(6 4)(6 4)(7 5)(8 4)(6 4)(3 3)(3 3)(3 5)(3 3)(5 3)(3 0)(3 1)(5 4)(6 3)(7 4)(8 4)(6 4)(3 3)(3 3)(3 4)(3 3)(5 3)(3 0)(3 1)(7 1)(7 1)(6 3)(7 3)(4 2)(4 6)(4 4)(3 3)(4 3)(4 2)(2 0)(4 1)(3 4)(6 2)(5 4)(6 4)(4 2)(4 3)(4 5)(3 2)(3 2)(4 3)(2 0)(3 2)(3 2)(7 2)(6 3)(7 4)(4 2)(4 5)(5 4)(4 4)(5 4)(7 3)(6 0)(5 1)(6 0)(6 1)(8 4)(8 4)(4 3)(4 6)(4 7)(4 3)(5 4)(6 3)(4 0)(4 1)(5 0)(7 1)(6 2)(6 3)(4 2)(4 5)(3 3)(5 2)(4 4)(6 2)(3 0)(7 1)(5 0)(8 1)(7 1)(8 2)(5 0)(9 2)(5 3)(7 3)(8 3)(6 3)(4 0)(7 2)(7 0)(9 2)(9 3)(6 3)(5 1)(8 3)(4 2)(5 2)(6 3)(7 2)(3 0)(7 2)(4 0)(9 1)(8 3)(6 4)(5 0)(7 3)(4 3)(6 3)(8 2)(7 2)(3 0)(7 2)(3 0)(6 0)(6 3)(5 4)(3 2)(8 3)(3 2)(7 2)(8 3)(8 4)(3 0)(8 3)(2 0)(7 2)(7 4)(7 4)(4 1)(8 3)(4 2)(6 3)(6 4)(5 5)(3 0)(5 4)(2 0)(8 2)(7 3)(7 5)(4 1)(8 4)(4 3)(6 3)(7 3)(7 5)(3 0)(7 4)(3 0)(5 4)(8 3)(6 6)(3 2)(8 3)(3 3)(8 3)(8 4)(6 5)(2 0)(8 3)(3 0)(9 1)(8 2)(7 4)(6 3)(8 3)(3 1)(5 4)(7 4)(5 6)(5 0)(8 4)(4 0)(9 1)(9 3)(8 4)(5 3)(8 3)(4 1)(8 4)(9 3)(5 5)(7 0)(8 4)(3 0)(6 1)(9 2)(7 4)(6 0)(7 5)(4 3)(6 5)(7 5)(6 4)(5 0)(6 3)(4 0)(7 2)(7 3)(5 6)(5 0)(8 4)(4 3)(4 6)(7 4)(6 4)(6 0)(8 2)(4 0)(6 1)(4 4)(4 3)(4 3)(6 3)(3 2)(8 5)(5 5)(6 6)(3 1)(7 4)(4 0)(8 4)(6 4)(6 3)(5 2)(8 4)(5 1)(7 6)(6 5)(6 4)(3 1)(7 5)(5 0)(9 3)(6 5)(7 3)(5 2)(7 4)(6 2)(7 6)(7 4)(6 3)(7 0)(7 3)(4 1)(8 4)(6 3)(7 3)(5 2)(7 5)(6 3)(4 7)(7 3)(7 4)(5 1)(5 4)(4 1)(6 6)(6 6)(6 3)(4 5)(4 3)(3 1)(7 4)(7 4)(5 3)(5 0)(9 3)(5 0)(9 2)(8 3)(8 5)(6 2)(7 3)(6 5)(5 3)(7 5)(7 5)(6 0)(6 2)(3 1)(7 2)(6 2)(6 2)(5 1)(7 5)(6 4)(4 5)(5 4)(6 5)(6 2)(6 2)(4 0)(9 2)(4 3)(7 2)(5 4)(6 4)(4 3)(7 6)(5 4)(6 4)(4 2)(6 3)(5 0)(7 3)(4 4)(7 2)(5 5)(6 2)(5 3)(8 5)(5 5)(6 3)(6 1)(8 2)(5 1)(7 2)(6 4)(6 4)(6 2)(8 3)(5 4)(5 4)(8 4)(5 5)(4 2)(6 1)(5 1)(8 1)(5 3)(5 5)(4 2)(6 4)(4 5)(7 4)(5 4)(5 4)(4 3)(3 4)(6 3)(5 6)(4 6)(6 4)(4 6)(5 4)(5 4)(5 7)(3 8)(5 4)(5 4)(3 3)(5 4)(5 7)(4 7)(3 3)(4 5)(4 3)(4 5)(4 6)(2 7)(3 3)(3 5)(4 5)(4 3)(5 4)(7 6)(3 2)(6 3)(5 3)(6 6)(6 5)(2 2)(5 5)(4 7)(3 6)(6 3)(6 5)(2 2)(5 5)(4 7)(3 6)(6 3)(6 5)(2 1)(5 6)(4 8)(3 6)(5 4)(3 7)(3 5)(4 4)(6 4)(2 3)(4 5)(4 4)(6 7)(6 3)(5 4)(5 3)(4 1)(2 5)(5 4)(5 5)(5 7)(4 6)(6 5)(3 6)(6 4)(6 5)(3 7)(2 5)(4 6)(4 7)(2 2)(4 5)(3 5)(3 5)(5 4)(2 6)(2 3)(3 5)(4 5)(4 5)(4 4)(6 8)(2 4)(5 5)(6 6)(5 7)(6 5)(4 6)(3 4)(4 9)(8 7)(6 9)(5 8)(4 7)(2 3)(8 8)(7 6)(6 8)(8 8)(5 6)(6 6)(4 4)(4 5)(3 4)(5 6)(4 4)(6 4)(7 3)(6 7)(5 3)(5 7)(4 3)(3 1)(6 4)(6 7)(4 5)(5 5)(4 4)(4 2)(4 5)(4 5)(6 4)(8 6)(4 3)(3 3)(6 4)(4 5)(5 6)(6 5)(4 7)(6 5)(5 8)(4 6)(6 7)(5 5)(4 8)(5 3)(6 8)(7 7)(7 8)(5 7)(4 6)(4 3)(6 8)(8 5)(8 8)(9 7)(5 6)(8 3)(8 9)(8 8)(8 8)(9 7)(5 7)(8 3)(8 9)(9 7)(7 9)(9 7)(5 4) ) )
	ElectricCounterpoint_Fast_2_RMS10-SC10_beatdur (bpmtobeatdur 193)
	 ElectricCounterpoint_Fast_2_RMS10-SC10_RMS_values (list 0.027584 0.039884 0.049613 0.059684 0.069516 0.078020 0.085999 0.094476 0.103823 0.115842))
(setf ElectricCounterpoint_Fast_2_RMS10-SC10_tune (make-instance (quote realtimetune) :grid ElectricCounterpoint_Fast_2_RMS10-SC10_grid :chapters (quote (1)) :beatduration ElectricCounterpoint_Fast_2_RMS10-SC10_beatdur :tunename "ElectricCounterpoint_Fast_2_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis ElectricCounterpoint_Fast_2_RMS10-SC10_RMS_values))
(setf (gethash (quote "ElectricCounterpoint_Fast_2_RMS10-SC10") *available-grids*) ElectricCounterpoint_Fast_2_RMS10-SC10_tune)


;ElectricCounterpoint_Fast_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	ElectricCounterpoint_Fast_RMS10-SC10_grid (quote ((0 4)(0 5)(0 4)(1 4)(1 3)(0 4)(1 5)(1 5)(2 4)(1 6)(1 6)(2 5)(3 4)(3 5)(2 5)(3 5)(2 6)(3 4)(4 4)(2 6)(3 4)(2 5)(3 5)(3 4)(3 4)(3 4)(3 4)(3 3)(3 3)(3 4)(4 3)(5 3)(4 1)(4 1)(4 1)(2 2)(3 1)(3 1)(2 1)(1 1)(1 1)(2 1)(1 2)(0 2)(0 1)(0 1)(0 2)(0 2)(1 3)(1 5)(0 6)(1 6)(1 5)(2 4)(3 4)(2 3)(2 4)(3 3)(1 4)(3 4)(2 3)(3 3)(4 2)(5 1)(4 2)(3 3)(4 2)(2 3)(3 3)(3 2)(3 2)(3 2)(3 2)(4 1)(3 1)(4 1)(2 2)(2 1)(2 1)(2 1)(1 2)(1 1)(1 1)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 4)(1 3)(1 3)(1 3)(1 6)(1 6)(2 6)(2 5)(2 4)(2 5)(3 2)(4 1)(3 1)(4 1)(6 0)(5 0)(3 2)(5 0)(4 1)(4 0)(5 1)(4 0)(3 2)(4 1)(4 1)(4 1)(3 2)(3 2)(4 2)(3 1)(4 0)(3 1)(3 0)(3 0)(2 0)(1 1)(1 0)(1 1)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 1)(0 2)(0 4)(1 6)(1 5)(1 6)(1 6)(1 8)(2 6)(2 6)(2 6)(2 5)(2 5)(3 5)(3 5)(2 6)(3 5)(2 4)(2 5)(3 4)(3 3)(3 5)(4 4)(4 4)(4 4)(3 4)(3 5)(3 4)(4 4)(3 4)(3 4)(3 5)(3 4)(3 4)(2 3)(3 4)(2 2)(1 4)(0 3)(0 3)(0 3)(0 4)(0 6)(0 7)(1 7)(1 8)(1 7)(1 7)(2 7)(2 7)(2 6)(2 6)(3 6)(3 6)(3 5)(3 4)(3 5)(3 6)(3 5)(3 5)(3 5)(3 4)(2 4)(3 5)(3 4)(2 6)(3 5)(2 5)(2 4)(3 5)(3 4)(3 4)(2 4)(2 3)(1 4)(1 1)(1 2)(0 2)(0 2)(0 1)(0 2)(0 2)(0 2)(0 3)(0 4)(0 4)(1 4)(1 5)(2 5)(2 4)(2 4)(2 4)(3 4)(3 3)(2 3)(2 3)(3 2)(3 3)(3 2)(2 3)(2 4)(2 2)(2 3)(2 1)(2 2)(3 2)(2 2)(3 1)(2 3)(2 4)(1 3)(2 3)(1 4)(1 3)(1 1)(1 2)(1 2)(0 3)(0 2)(0 2)(0 4)(0 5)(0 6)(1 6)(1 7)(1 6)(1 6)(1 7)(2 5)(2 5)(1 4)(1 6)(1 6)(2 5)(2 5)(2 4)(2 6)(2 4)(2 4)(2 4)(2 4)(3 3)(3 3)(2 4)(2 3)(2 3)(2 3)(2 4)(2 3)(1 4)(1 4)(1 4)(1 3)(1 2)(1 2)(0 1)(0 1)(0 0)(0 0)(0 0)(0 1)(0 2)(0 3)(0 4)(0 5)(0 6)(0 6)(0 8)(1 7)(1 6)(1 4)(0 6)(1 4)(1 5)(2 4)(2 2)(2 4)(3 3)(3 3)(2 3)(2 3)(3 2)(3 2)(3 2)(3 3)(3 3)(3 2)(3 3)(3 3)(2 2)(2 3)(2 3)(3 2)(2 3)(2 3)(2 3)(2 2)(1 4)(1 3)(1 3)(0 1)(0 1)(0 2)(0 1)(0 1)(0 3)(0 3)(0 4)(0 4)(1 4)(1 4)(1 3)(1 3)(1 4)(2 2)(2 2)(3 2)(3 1)(3 1)(4 2)(3 2)(2 3)(4 1)(4 0)(4 0)(4 0)(4 0)(3 1)(3 0)(4 0)(3 1)(2 1)(3 2)(2 2)(2 2)(2 0)(1 1)(2 1)(2 0)(2 1)(2 0)(2 0)(2 0)(0 1)(0 0)(0 0)(0 1)(0 2)(0 4)(1 5)(1 8)(1 8)(2 7)(2 7)(3 6)(3 5)(5 2)(4 3)(5 2)(5 1)(5 1)(5 1)(4 1)(5 1)(5 1)(5 0)(5 2)(5 1)(4 2)(4 1)(4 1)(5 1)(5 1)(6 1)(5 1)(4 1)(4 1)(4 2)(5 1)(5 0)(4 1)(4 1)(4 2)(3 0)(3 0)(3 1)(2 1)(1 1)(1 1)(2 1)(2 2)(1 0)(1 0)(1 2)(1 2)(0 0)(0 0)(0 0)(0 4)(0 1)(0 0)(0 1)(1 4)(3 2)(0 0)(0 6)(0 5)(2 2)(3 5)(0 6)(0 5)(0 2)(0 1)(0 3)(0 6)(2 3)(2 4)(1 5)(1 4)(3 3)(0 1)(0 8)(0 7)(1 7)(2 6)(1 4)(1 5)(1 8)(0 2)(0 2)(0 7)(1 4)(2 4)(0 5)(1 3)(1 7)(1 8)(1 6)(0 6)(0 7)(2 7)(1 5)(1 4)(1 6)(1 7)(0 6)(0 8)(2 6)(2 6)(1 4)(0 4)(2 5)(1 8)(0 8)(0 5)(2 5)(2 7)(1 5)(1 3)(1 6)(2 8)(0 3)(0 5)(3 5)(2 5)(1 3)(0 4)(2 6)(1 8)(1 5)(1 5)(2 5)(2 3)(2 4)(1 3)(0 7)(2 5)(1 2)(0 6)(0 7)(1 4)(2 4)(3 4)(1 1)(0 2)(3 6)(1 5)(1 2)(2 6)(1 4)(3 5)(1 2)(0 2)(2 4)(1 4)(1 1)(2 5)(2 6)(2 4)(1 3)(0 4)(2 7)(1 5)(1 3)(2 7)(2 4)(3 5)(1 2)(0 4)(2 5)(1 4)(1 2)(1 6)(3 5)(2 4)(1 5)(0 3)(2 7)(1 6)(1 4)(2 4)(3 5)(3 4)(1 2)(0 2)(2 5)(1 5)(1 4)(2 5)(1 5)(3 4)(1 3)(0 1)(2 8)(1 6)(1 3)(2 4)(2 3)(2 4)(1 2)(1 2)(1 3)(0 5)(1 3)(1 4)(2 5)(2 4)(4 6)(1 1)(2 6)(1 5)(3 3)(5 4)(3 4)(2 6)(2 4)(1 2)(2 4)(1 5)(3 4)(4 5)(3 6)(2 6)(3 6)(1 2)(2 5)(1 2)(3 5)(4 4)(4 4)(3 5)(4 5)(1 2)(2 5)(0 3)(4 4)(6 4)(3 6)(3 4)(3 6)(3 5)(5 6)(1 2)(4 4)(6 5)(4 5)(3 5)(4 6)(2 3)(4 6)(0 3)(4 6)(5 6)(4 7)(2 6)(4 4)(2 3)(4 8)(0 2)(4 4)(5 5)(5 5)(2 5)(2 5)(0 2)(3 4)(1 3)(3 3)(2 5)(3 5)(3 7)(5 3)(1 3)(4 7)(1 4)(4 4)(2 4)(3 7)(3 6)(4 2)(0 3)(4 6)(1 4)(4 3)(3 8)(4 7)(4 6)(5 6)(1 5)(5 5)(1 5)(4 3)(2 6)(4 6)(5 6)(4 5)(0 3)(5 7)(0 5)(4 4)(3 6)(4 6)(6 6)(4 4)(2 3)(5 8)(1 3)(5 4)(4 6)(5 7)(5 6)(4 4)(1 2)(6 6)(0 4)(4 5)(4 5)(4 7)(4 6)(4 3)(2 2)(4 5)(0 4)(2 4)(2 6)(3 7)(3 6)(2 6)(0 2)(3 6)(0 2)(2 5)(3 5)(3 7)(3 6)(4 5)(2 3)(3 6)(0 2)(4 4)(4 4)(3 7)(2 6)(3 4)(1 3)(3 5)(0 4)(3 4)(6 3)(4 5)(3 5)(5 5)(2 2)(3 5)(0 1)(3 4)(5 3)(3 6)(3 5)(4 4)(2 2)(3 5)(0 3)(3 5)(5 4)(4 4)(3 6)(4 5)(2 5)(5 5)(1 1)(3 3)(6 3)(5 4)(3 4)(4 5)(1 5)(4 5)(0 2)(3 6)(5 4)(4 4)(2 6)(4 4)(2 2)(4 4)(0 3)(2 4)(3 5)(2 6)(3 7)(3 5)(0 4)(4 5)(0 3)(1 7)(2 5)(3 6)(4 6)(5 3)(1 2)(4 4)(1 3)(5 4)(2 5)(3 6)(4 5)(6 3)(1 3)(6 5)(2 2)(6 4)(3 5)(3 6)(3 6)(6 3)(2 2)(4 5)(4 1)(5 6)(2 5)(2 7)(4 6)(6 4)(1 2)(5 6)(2 4)(5 3)(3 6)(5 3)(6 3)(5 3)(1 3)(3 5)(3 1)(3 7)(3 6)(4 5)(4 4)(6 2)(1 2)(5 5)(2 2)(4 6)(3 4)(4 4)(5 3)(5 1)(2 4)(4 4)(4 3)(4 4)(3 4)(3 5)(4 4)(4 3)(1 2)(2 5)(1 3)(2 8)(3 4)(4 5)(3 6)(4 5)(2 8)(3 7)(3 6)(3 6)(3 7)(3 8)(4 6)(4 4)(2 3)(4 6)(2 3)(5 7)(7 6)(6 8)(6 8)(5 8)(4 6)(5 8)(4 5)(6 7)(7 7)(7 6)(7 4)(7 6)(6 3)(7 5)(8 2)(8 5)(9 6)(9 5)(9 6)(9 7)(8 6)(8 8)(9 4)(7 8)(9 5)(8 7)(8 6)(9 6)(7 4)(7 6)(7 4)(7 5)(7 5)(7 5)(8 6)(6 7)(6 2)(5 5)(6 3)(6 5)(4 5)(4 5)(6 5)(6 7)(3 1)(3 8)(6 5)(4 7)(3 9)(4 9)(5 8)(4 8)(3 5)(3 7)(4 6)(4 5)(2 6)(3 7)(5 5)(6 3)(4 2)(5 4)(4 3)(4 4)(3 5)(4 4)(4 5)(5 4)(7 3)(7 4)(7 2)(7 3)(5 5)(6 4)(7 4)(7 2)(6 1)(7 3)(8 0)(7 3)(8 2)(7 1)(9 0)(9 0)(6 1)(7 1)(5 2)(5 2)(3 1)(3 2)(5 1)(5 1)(3 0)(1 3)(3 4)(2 4)(3 0)(3 1)(4 3)(5 2)(4 0)(3 2)(3 2)(2 6)(4 2)(3 2)(7 1)(7 2)(5 1)(4 2)(7 1)(5 2)(6 1)(8 0)(9 0)(9 0)(9 0)(8 0)(9 1)(6 5)(6 1)(6 1)(9 0)(7 1)(8 0)(5 1)(5 1)(5 3)(4 2)(5 2)(5 2)(5 1)(4 1)(4 2)(4 3)(3 2)(2 1)(1 2)(4 3)(2 5)(1 2)(1 3)(2 6)(0 8)(1 4)(0 5)(2 6)(3 5)(3 4)(1 4)(3 7)(3 9)(2 7)(4 5)(4 7)(4 6)(3 3)(4 4)(4 3)(4 5)(6 4)(8 4)(8 4)(7 4)(8 4)(8 0)(7 4)(6 2)(7 3)(6 5)(6 6)(6 6)(5 4)(6 4)(6 3)(5 4)(5 6)(6 7)(7 5)(7 6)(6 5)(4 0)(5 6)(5 5)(6 7)(3 9)(5 9)(4 9)(4 7)(4 6)(5 7)(1 8)(4 9)(6 8)(5 8)(4 9)(6 6)(5 2)(6 8)(5 2)(6 5)(6 6)(6 7)(7 5)(6 4)(5 4)(7 6)(4 6)(7 4)(6 6)(7 5)(7 5)(6 3)(4 3)(6 6)(4 5)(5 5)(5 5)(7 4)(4 5)(5 3)(4 1)(4 6)(1 4)(2 5)(2 6)(2 8)(2 8)(2 9)(1 4)(2 9)(0 6)(3 5)(2 7)(4 7)(3 7)(4 7)(2 4)(5 7)(2 7)(5 5)(6 5)(7 5)(7 4)(7 2)(9 1)(8 5)(6 3)(7 3)(8 3)(8 5)(8 5)(6 4)(7 3)(8 3)(7 1)(7 2)(7 3)(6 2)(5 6)(4 5)(2 1)(4 6)(1 0)(4 4)(3 7)(4 7)(3 7)(3 6)(1 3)(3 9)(0 5)(6 6)(5 7)(5 7)(7 6)(6 4)(4 1)(6 6)(3 3)(5 4)(5 2)(5 5)(5 4)(5 4)(4 2)(5 7)(5 0)(7 5)(7 4)(7 7)(8 6)(6 4)(5 1)(6 7)(3 3)(5 4)(5 2)(6 4)(6 4)(5 4)(3 1)(4 7)(0 2)(2 9)(1 8)(3 9)(4 6)(3 8)(1 4)(2 9)(0 4)(3 7)(1 7)(3 7)(5 4)(5 5)(5 0)(7 4)(8 0)(7 2)(6 2)(7 3)(8 2)(6 2)(6 0)(8 4)(8 0)(8 3)(8 1)(9 1)(9 1)(6 4)(6 2)(9 3)(6 0)(7 2)(7 0)(7 1)(6 2)(5 0)(4 0)(5 4)(3 0)(5 5)(3 4)(4 6)(4 5)(3 4)(2 3)(5 8)(0 5)(3 5)(5 3)(4 7)(5 4)(5 3)(5 2)(5 5)(5 2)(6 4)(7 3)(8 2)(8 2)(6 2)(6 2)(6 5)(4 2)(5 6)(6 3)(5 4)(4 6)(3 5)(3 3)(4 6)(2 3)(4 3)(3 3)(4 4)(4 4)(3 6)(3 3)(3 9)(1 5)(4 9)(4 6)(4 7)(6 4)(4 6)(2 3)(4 7)(1 6)(3 6)(3 5)(3 7)(4 5)(5 6)(5 1)(6 4)(5 2)(6 6)(6 3)(6 3)(8 3)(8 2)(8 0)(9 1)(8 1)(8 1)(8 1)(9 1)(9 2)(7 3)(8 0)(9 2)(7 0)(6 4)(8 2)(7 1)(7 3)(7 3)(6 1)(7 2)(6 2)(6 5)(6 2)(7 2)(8 4)(7 2)(8 1)(8 3)(8 1)(7 5)(7 3)(5 4)(6 4)(4 5)(2 3)(4 5)(2 5)(2 7)(2 6)(2 5)(2 6)(2 8)(1 2)(2 8)(1 4)(1 9)(1 6)(1 7)(1 9)(1 8)(1 7)(1 7)(0 4)(0 7)(0 3)(0 3)(0 8)(0 7)(0 2)(0 5) ) )
	ElectricCounterpoint_Fast_RMS10-SC10_beatdur (bpmtobeatdur 193)
	 ElectricCounterpoint_Fast_RMS10-SC10_RMS_values (list 0.030521 0.043875 0.056780 0.067882 0.080952 0.093535 0.106884 0.121374 0.137374 0.154764))
(setf ElectricCounterpoint_Fast_RMS10-SC10_tune (make-instance (quote realtimetune) :grid ElectricCounterpoint_Fast_RMS10-SC10_grid :chapters (quote (1)) :beatduration ElectricCounterpoint_Fast_RMS10-SC10_beatdur :tunename "ElectricCounterpoint_Fast_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis ElectricCounterpoint_Fast_RMS10-SC10_RMS_values))
(setf (gethash (quote "ElectricCounterpoint_Fast_RMS10-SC10") *available-grids*) ElectricCounterpoint_Fast_RMS10-SC10_tune)


;ElectricCounterpoint_Slow_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	ElectricCounterpoint_Slow_RMS10-SC10_grid (quote ((0 3)(0 1)(0 3)(0 1)(0 2)(0 4)(0 5)(0 0)(0 1)(0 1)(0 7)(1 2)(0 0)(0 1)(0 0)(0 0)(1 0)(0 0)(1 0)(3 0)(0 0)(1 0)(1 0)(0 0)(0 2)(2 1)(0 1)(0 2)(0 0)(1 4)(2 2)(0 2)(1 0)(0 0)(0 1)(1 0)(0 1)(1 1)(3 2)(0 1)(1 0)(1 6)(0 5)(0 2)(3 4)(2 1)(1 5)(1 0)(1 1)(3 9)(1 1)(1 2)(1 5)(1 2)(1 2)(1 0)(2 3)(3 4)(1 0)(1 1)(1 2)(0 1)(0 4)(1 2)(2 0)(1 3)(1 0)(1 1)(2 4)(1 0)(1 1)(1 3)(0 3)(1 0)(0 0)(2 1)(2 2)(1 0)(2 7)(2 3)(0 1)(2 6)(3 3)(2 0)(3 3)(3 1)(2 1)(3 1)(1 0)(2 5)(2 3)(1 1)(2 5)(0 3)(2 2)(3 2)(1 0)(2 9)(2 3)(1 1)(2 4)(2 2)(3 0)(3 4)(1 2)(2 2)(3 2)(0 2)(3 6)(2 2)(1 3)(2 4)(1 0)(1 4)(2 2)(1 0)(1 2)(1 3)(0 2)(1 5)(6 2)(4 0)(4 1)(3 0)(4 7)(3 3)(1 0)(4 7)(3 3)(2 4)(2 3)(0 2)(1 2)(2 5)(1 0)(1 4)(1 3)(0 2)(1 5)(6 3)(5 0)(4 1)(1 1)(2 8)(3 2)(1 0)(2 8)(1 4)(1 5)(4 2)(1 3)(3 6)(4 2)(2 0)(4 8)(3 4)(1 2)(5 6)(4 2)(2 1)(2 1)(1 1)(2 9)(3 4)(1 5)(3 7)(3 3)(2 6)(2 2)(0 1)(2 2)(3 1)(1 0)(2 4)(4 2)(4 0)(2 3)(3 1)(2 0)(2 2)(1 0)(2 5)(4 2)(1 3)(2 3)(5 3)(4 1)(2 2)(1 0)(2 5)(3 1)(3 0)(3 6)(2 3)(2 0)(2 3)(4 1)(2 1)(2 3)(2 0)(2 2)(3 4)(2 1)(2 5)(2 4)(1 1)(1 2)(1 0)(2 2)(3 4)(1 1)(4 2)(4 4)(2 0)(5 3)(6 1)(2 1)(4 1)(1 1)(2 5)(3 1)(2 0)(6 2)(4 3)(2 2)(5 1)(4 0)(2 3)(3 1)(2 1)(4 2)(3 2)(1 0)(4 2)(5 0)(3 0)(5 0)(2 0)(2 2)(3 4)(2 0)(2 6)(3 4)(2 1)(2 2)(2 0)(2 3)(2 3)(2 1)(2 3)(2 5)(2 0)(2 2)(4 0)(4 0)(4 0)(3 0)(4 1)(3 2)(2 0)(5 1)(5 2)(4 1)(2 3)(1 1)(2 4)(3 2)(3 2)(2 5)(3 4)(2 1)(2 4)(4 2)(3 1)(4 0)(3 0)(5 2)(5 3)(3 1)(4 3)(6 3)(4 2)(2 2)(1 2)(4 2)(5 4)(3 2)(4 2)(5 3)(3 2)(5 2)(4 1)(2 2)(3 1)(2 2)(3 4)(4 5)(3 1)(3 5)(2 3)(2 1)(2 2)(2 1)(1 5)(3 4)(4 1)(4 4)(5 7)(4 3)(3 7)(5 2)(4 2)(7 3)(4 3)(5 4)(7 3)(5 3)(2 3)(5 7)(5 1)(6 3)(4 4)(3 3)(3 3)(4 1)(4 5)(5 3)(3 3)(2 5)(9 3)(8 3)(8 3)(4 4)(3 6)(6 1)(7 1)(4 3)(7 4)(9 1)(8 2)(8 1)(8 0)(6 2)(7 1)(5 5)(6 5)(6 2)(4 4)(9 4)(8 3)(9 4)(6 5)(4 3)(6 2)(9 1)(4 1)(7 4)(8 2)(8 2)(5 3)(5 1)(5 2)(6 2)(4 6)(5 8)(4 3)(2 6)(7 4)(6 5)(7 5)(6 5)(2 7)(4 6)(5 4)(1 7)(4 5)(6 2)(6 3)(2 4)(3 3)(3 7)(4 4)(3 7)(4 7)(2 6)(1 7)(4 6)(6 3)(5 4)(7 3)(3 4)(4 4)(5 4)(4 4)(5 4)(5 3)(5 2)(5 2)(5 1)(5 3)(6 2)(5 2)(6 2)(6 3)(5 3)(6 2)(8 2)(6 1)(9 3)(4 5)(5 4)(5 7)(5 6)(6 6)(4 6)(4 6)(6 4)(3 6)(5 5)(6 6)(2 7)(4 7)(3 7)(4 8)(7 6)(7 5)(5 6)(7 5)(1 2)(2 7)(5 7)(3 7)(5 7)(3 6)(2 7)(7 4)(4 6)(5 6)(5 6)(3 7)(5 8)(4 7)(2 8)(8 6)(8 6)(5 6)(8 6)(4 5)(5 6)(7 6)(4 5)(7 6)(5 5)(5 5)(9 4)(6 2)(6 3)(9 1)(7 1)(8 3)(7 2)(5 3)(9 6)(9 2)(5 4)(9 4)(5 4)(4 6)(6 6)(3 6)(6 6)(5 6)(2 7)(6 5)(3 7)(4 7)(4 8)(1 7)(5 5)(2 4)(0 3)(6 3)(4 3)(2 6)(5 6)(2 7)(2 9)(6 7)(3 8)(5 7)(5 6)(4 5)(7 3)(5 6)(5 6)(5 6)(4 6)(7 4)(6 4)(4 7)(6 6)(6 5)(5 6)(6 4)(3 6)(4 7)(5 4)(2 6)(6 4)(5 3)(5 2)(5 2)(4 3)(4 6)(6 3)(3 2)(8 4)(5 3)(3 2)(5 4)(7 2)(3 4)(8 3)(4 4)(4 6)(6 4)(3 4)(7 3)(7 2)(6 1)(7 1)(5 4)(6 3)(7 3)(5 1)(9 3)(8 3)(5 3)(6 1)(9 1)(5 2)(9 0)(5 2)(5 3)(7 2)(4 2)(9 1)(9 1)(6 2)(6 2)(5 3)(8 2)(6 2)(5 0)(9 2)(7 3)(4 3)(9 2)(9 0)(6 1)(7 1)(4 2)(4 5)(5 2)(2 4)(4 5)(6 3)(4 1)(6 3)(2 5)(3 8)(6 3)(2 4)(9 5)(7 6)(3 8)(9 3)(7 3)(3 4)(9 2)(4 3)(3 6)(6 4)(3 6)(6 4)(6 3)(5 3)(4 3)(5 1)(5 2)(8 1)(5 3)(8 2)(7 2)(5 4)(6 3)(6 4)(5 4)(5 4)(4 4)(4 5)(5 5)(4 4)(4 5)(3 6)(4 6)(5 4)(4 4)(6 3)(5 4)(4 4)(3 7)(3 6)(2 6)(3 6)(4 3)(3 6)(2 6)(1 7)(2 8)(3 6)(1 8)(2 8)(4 7)(2 6)(2 5)(1 6)(3 6)(2 3)(1 3)(2 5)(2 2)(1 0)(1 3)(2 1)(0 0)(0 0)(0 2)(0 5)(0 2)(0 2)(0 3) ) )
	ElectricCounterpoint_Slow_RMS10-SC10_beatdur (bpmtobeatdur 193)
	 ElectricCounterpoint_Slow_RMS10-SC10_RMS_values (list 0.024569 0.037833 0.049396 0.060003 0.072854 0.084872 0.097463 0.110175 0.123307 0.138911))
(setf ElectricCounterpoint_Slow_RMS10-SC10_tune (make-instance (quote realtimetune) :grid ElectricCounterpoint_Slow_RMS10-SC10_grid :chapters (quote (1)) :beatduration ElectricCounterpoint_Slow_RMS10-SC10_beatdur :tunename "ElectricCounterpoint_Slow_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis ElectricCounterpoint_Slow_RMS10-SC10_RMS_values))
(setf (gethash (quote "ElectricCounterpoint_Slow_RMS10-SC10") *available-grids*) ElectricCounterpoint_Slow_RMS10-SC10_tune)


;NewYorkCounterpoint_1_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	NewYorkCounterpoint_1_RMS10-SC10_grid (quote ((0 3)(1 4)(1 5)(1 5)(2 6)(3 6)(3 6)(4 7)(5 7)(6 8)(7 8)(7 8)(7 9)(7 9)(7 8)(7 9)(7 8)(7 9)(7 8)(6 8)(5 7)(5 6)(4 5)(3 5)(3 5)(2 4)(1 4)(0 3)(0 1)(0 1)(0 1)(0 1)(0 2)(0 2)(0 4)(0 2)(0 3)(1 4)(1 6)(1 6)(2 6)(3 7)(4 7)(4 7)(4 7)(5 7)(7 7)(6 7)(6 6)(6 5)(5 4)(4 4)(4 4)(3 4)(2 5)(1 5)(0 6)(0 4)(0 1)(0 0)(0 0)(0 1)(0 2)(0 4)(0 4)(0 4)(0 5)(0 6)(1 8)(2 8)(2 8)(3 8)(4 8)(4 8)(4 8)(5 8)(6 8)(6 7)(6 7)(6 7)(6 7)(6 6)(6 6)(5 6)(5 5)(5 4)(4 4)(4 4)(4 3)(3 3)(4 3)(4 3)(3 5)(3 4)(3 3)(2 2)(2 0)(1 0)(0 0)(0 1)(0 3)(0 6)(0 7)(1 8)(2 8)(2 8)(2 8)(3 8)(3 8)(3 7)(4 8)(5 7)(6 8)(6 7)(6 8)(5 6)(6 7)(5 7)(6 6)(5 6)(5 5)(4 5)(4 3)(3 4)(3 5)(2 3)(1 2)(0 2)(0 1)(0 1)(0 1)(0 1)(0 2)(0 3)(0 6)(0 7)(1 8)(1 9)(2 9)(3 8)(4 8)(4 8)(4 8)(5 8)(5 8)(5 8)(6 8)(5 9)(5 8)(6 8)(7 8)(7 8)(6 9)(7 7)(6 7)(5 7)(5 7)(4 7)(4 6)(4 7)(3 7)(1 6)(1 6)(0 4)(0 2)(0 1)(0 1)(0 1)(0 3)(0 4)(0 4)(0 5)(0 6)(1 5)(2 6)(2 7)(3 6)(4 6)(4 6)(5 6)(5 7)(5 6)(5 6)(5 6)(5 4)(5 4)(3 3)(2 3)(1 4)(0 3)(0 2)(0 1)(0 0)(0 0)(0 0)(0 0)(0 1)(0 2)(0 5)(0 3)(0 3)(0 5)(1 7)(1 7)(1 7)(2 7)(2 7)(3 7)(3 6)(4 7)(4 7)(4 8)(5 7)(5 7)(6 7)(6 6)(6 6)(6 5)(6 4)(5 3)(4 3)(4 3)(3 3)(3 2)(3 2)(2 2)(2 1)(2 0)(1 0)(1 0)(0 0)(0 0)(0 0)(0 2)(0 5)(1 6)(1 6)(1 6)(2 7)(2 7)(3 6)(3 6)(3 6)(4 6)(5 7)(6 6)(6 7)(6 6)(7 6)(6 7)(6 7)(6 7)(6 6)(6 6)(6 6)(5 5)(5 5)(4 5)(5 5)(5 5)(4 4)(3 4)(3 4)(3 4)(3 4)(2 3)(1 2)(0 1)(0 1)(0 3)(1 7)(1 7)(0 6)(0 6)(0 2)(0 6)(1 9)(0 6)(0 6)(0 2)(0 8)(0 6)(1 9)(1 4)(4 8)(0 2)(0 8)(0 6)(0 9)(0 6)(2 9)(0 1)(0 4)(0 3)(0 9)(0 6)(2 8)(0 2)(0 6)(0 2)(1 9)(0 4)(2 8)(3 4)(1 5)(0 2)(1 9)(0 5)(3 9)(3 4)(1 5)(0 2)(1 9)(1 5)(4 9)(4 4)(2 4)(0 4)(2 5)(0 5)(2 9)(2 2)(0 5)(0 6)(2 6)(1 7)(2 9)(2 2)(2 4)(0 9)(2 7)(0 2)(2 9)(0 5)(0 4)(0 6)(2 7)(1 3)(2 8)(1 4)(1 2)(0 5)(1 8)(0 6)(1 9)(0 4)(0 5)(0 7)(1 8)(0 4)(1 9)(0 5)(3 6)(4 7)(2 8)(0 4)(1 8)(0 4)(4 7)(5 5)(2 7)(0 4)(1 8)(0 4)(3 6)(4 5)(4 5)(0 4)(1 8)(0 4)(3 6)(4 5)(5 5)(0 6)(1 9)(0 6)(3 6)(3 7)(4 4)(0 4)(3 8)(3 5)(4 5)(3 5)(5 5)(1 3)(3 7)(5 6)(4 5)(3 4)(5 5)(1 6)(3 8)(3 7)(3 5)(3 4)(4 5)(0 6)(3 7)(2 7)(3 4)(2 5)(2 9)(0 7)(1 8)(1 6)(0 7)(1 5)(1 9)(0 7)(1 6)(0 6)(1 8)(1 4)(3 7)(0 4)(1 6)(0 6)(1 8)(2 4)(3 8)(0 5)(1 7)(0 7)(1 9)(2 4)(3 7)(0 6)(3 4)(1 3)(0 6)(2 4)(3 7)(0 4)(3 4)(1 3)(1 6)(2 3)(3 7)(0 5)(3 4)(2 3)(0 8)(2 3)(3 7)(1 5)(3 4)(1 3)(1 5)(2 3)(3 7)(1 6)(3 4)(1 3)(1 4)(2 3)(3 6)(0 6)(3 5)(1 3)(1 6)(2 4)(3 5)(1 5)(2 5)(1 4)(0 7)(1 5)(2 7)(1 6)(1 5)(1 5)(0 7)(1 5)(2 5)(3 3)(2 6)(1 5)(0 6)(1 4)(2 7)(3 3)(2 6)(1 5)(0 6)(1 4)(2 7)(3 3)(2 6)(1 5)(0 6)(1 4)(2 7)(2 4)(2 6)(4 5)(3 4)(1 4)(1 6)(2 4)(2 5)(3 5)(2 5)(1 4)(2 8)(2 3)(2 4)(4 4)(2 2)(3 1)(2 5)(3 3)(2 4)(4 5)(2 4)(3 1)(2 5)(2 3)(2 6)(3 5)(2 4)(3 2)(2 7)(2 2)(2 5)(2 4)(1 5)(2 2)(2 5)(1 4)(2 6)(2 5)(1 5)(1 4)(2 6)(1 6)(1 3)(2 6)(1 6)(1 4)(1 7)(1 6)(1 5)(1 7)(3 5)(5 3)(3 5)(1 6)(1 4)(1 6)(2 5)(4 3)(2 6)(1 6)(1 5)(2 6)(2 5)(4 3)(4 4)(2 5)(1 4)(2 6)(2 6)(6 3)(5 3)(3 3)(1 4)(2 6)(2 5)(5 3)(4 3)(3 2)(1 2)(3 4)(2 4)(5 2)(5 2)(3 2)(1 2)(3 3)(2 4)(4 2)(3 3)(3 2)(1 2)(2 4)(1 5)(2 4)(2 2)(2 2)(1 3)(2 4)(1 4)(2 3)(1 4)(2 3)(1 2)(2 5)(1 6)(2 4)(1 4)(2 3)(1 2)(2 5)(1 6)(2 5)(1 3)(2 3)(1 3)(3 5)(1 5)(2 4)(2 4)(3 4)(1 4)(3 4)(1 5)(2 3)(1 3)(4 5)(2 3)(4 5)(2 5)(3 2)(2 4)(4 4)(2 2)(5 5)(3 4)(5 2)(3 3)(5 5)(5 2)(7 4)(4 6)(7 4)(7 5)(7 6)(5 5)(7 7)(5 7)(7 6)(5 7)(5 8)(4 7)(8 6)(4 7)(6 5)(5 5)(7 7)(4 6)(7 5)(2 8)(5 4)(2 5)(5 6)(2 5)(5 5)(2 6)(4 4)(1 4)(4 4)(1 2)(4 5)(1 5)(3 4)(0 4)(3 4)(0 2)(3 5)(1 6)(2 4)(1 3)(3 2)(1 1)(4 4)(2 4)(3 4)(3 3)(4 2)(3 2)(5 3)(4 4)(5 4)(4 4)(6 3)(4 4)(6 5)(6 4)(7 4)(6 4)(7 4)(5 5)(6 4)(6 5)(7 5)(6 4)(7 4)(4 5)(5 4)(5 5)(5 4)(3 3)(5 2)(2 1)(3 4)(2 5)(3 2)(1 3)(3 2)(0 1)(2 5)(2 5)(2 3)(0 3)(2 4)(0 2)(3 6)(1 4)(2 4)(1 3)(4 2)(2 2)(4 5)(5 4)(7 3)(5 4)(7 3)(4 3)(7 4)(7 4)(9 3)(6 4)(9 3)(6 5)(8 4)(9 4)(9 2)(5 3)(9 2)(6 2)(9 2)(7 3)(6 2)(3 3)(5 2)(1 2)(3 3)(3 2)(3 3)(1 2)(3 5)(0 4)(2 6)(1 3)(2 3)(1 2)(3 2)(2 1)(4 4)(4 2)(6 3)(5 4)(7 3)(6 4)(6 4)(7 3)(7 4)(7 5)(9 3)(7 5)(8 5)(8 4)(7 5)(7 6)(9 5)(7 5)(7 5)(8 4)(9 5)(7 5)(9 4)(8 4)(7 4)(8 4)(8 5)(4 4)(7 2)(5 2)(5 2)(6 1)(6 3)(4 4)(4 3)(3 2)(5 2)(6 2)(3 3)(5 2)(8 4)(3 1)(4 3)(5 1)(5 4)(4 2)(6 3)(4 1)(6 3)(6 2)(4 4)(6 2)(8 4)(5 4)(7 3)(7 2)(8 4)(6 5)(9 4)(7 6)(8 5)(8 5)(9 6)(9 5)(9 5)(6 6)(7 5)(9 4)(9 5)(9 5)(8 5)(7 5)(9 3)(8 4)(7 4)(8 4)(9 4)(6 4)(7 3)(5 2)(7 2)(6 2)(6 3)(3 2)(5 2)(5 1)(3 2)(7 1)(9 4)(3 3)(5 2)(5 1)(5 3)(7 1)(8 3)(3 3)(5 3)(5 2)(8 3)(8 3)(8 3)(5 5)(7 3)(7 4)(8 3)(9 3)(9 3)(7 6)(9 5)(8 4)(9 5)(9 3)(9 3)(5 5)(7 3)(7 2)(6 2)(7 1)(8 2)(3 3)(5 3)(3 2)(3 1)(3 1)(2 4)(0 4)(2 6)(1 5)(1 4)(1 4)(2 5)(0 4)(2 6)(1 5)(0 5)(1 3)(1 5)(0 5)(1 4) ) )
	NewYorkCounterpoint_1_RMS10-SC10_beatdur (bpmtobeatdur 181)
	 NewYorkCounterpoint_1_RMS10-SC10_RMS_values (list 0.028978 0.042665 0.054830 0.067095 0.081067 0.093126 0.104668 0.117899 0.132634 0.150401))
(setf NewYorkCounterpoint_1_RMS10-SC10_tune (make-instance (quote realtimetune) :grid NewYorkCounterpoint_1_RMS10-SC10_grid :chapters (quote (1)) :beatduration NewYorkCounterpoint_1_RMS10-SC10_beatdur :tunename "NewYorkCounterpoint_1_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis NewYorkCounterpoint_1_RMS10-SC10_RMS_values))
(setf (gethash (quote "NewYorkCounterpoint_1_RMS10-SC10") *available-grids*) NewYorkCounterpoint_1_RMS10-SC10_tune)


;NewYorkCounterpoint_2_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	NewYorkCounterpoint_2_RMS10-SC10_grid (quote ((1 4)(1 7)(2 2)(0 0)(0 3)(1 1)(0 3)(0 0)(1 1)(2 3)(0 2)(1 3)(0 6)(1 8)(2 2)(0 0)(0 8)(2 4)(0 4)(0 0)(1 0)(2 3)(0 1)(1 2)(1 6)(3 7)(4 4)(3 3)(0 0)(2 2)(0 1)(0 2)(1 1)(2 3)(1 0)(1 1)(1 7)(6 6)(7 6)(4 4)(0 1)(2 4)(0 4)(0 1)(1 0)(2 3)(1 2)(2 3)(4 4)(4 6)(6 5)(3 2)(0 0)(2 3)(2 2)(0 1)(1 1)(2 2)(1 3)(2 2)(4 5)(2 7)(4 5)(2 3)(0 0)(2 4)(2 3)(0 1)(1 2)(3 4)(1 3)(2 3)(5 4)(4 8)(5 6)(4 3)(0 0)(2 3)(2 3)(0 1)(3 1)(5 3)(4 4)(3 3)(5 2)(4 5)(6 4)(6 3)(1 0)(2 4)(2 4)(0 1)(3 1)(4 4)(4 1)(3 3)(2 2)(2 7)(3 4)(2 2)(0 0)(3 5)(1 3)(0 1)(2 1)(3 3)(3 3)(3 4)(2 3)(2 5)(9 5)(9 5)(8 4)(3 1)(1 2)(1 1)(2 0)(4 1)(3 3)(2 3)(2 4)(3 5)(7 4)(9 4)(7 4)(3 2)(1 4)(0 1)(2 1)(3 2)(3 3)(3 4)(2 4)(2 5)(7 6)(8 6)(7 4)(3 1)(1 1)(6 3)(2 0)(6 1)(2 2)(2 1)(2 5)(2 5)(6 4)(7 6)(6 4)(3 2)(1 3)(3 2)(2 0)(5 1)(5 1)(6 3)(4 2)(4 3)(7 4)(7 4)(4 3)(3 4)(1 2)(2 1)(2 0)(4 1)(5 2)(7 4)(4 3)(4 4)(6 3)(6 4)(4 3)(3 5)(1 2)(4 2)(2 0)(5 1)(5 1)(6 3)(3 2)(4 3)(5 4)(5 3)(2 4)(2 3)(2 3)(1 1)(1 0)(3 1)(4 1)(4 3)(2 2)(2 3)(4 4)(4 3)(1 3)(2 3)(1 3)(1 0)(2 0)(3 1)(4 2)(4 4)(5 3)(3 3)(4 5)(5 4)(3 3)(3 3)(2 4)(1 0)(3 1)(3 2)(3 2)(6 3)(6 3)(6 3)(5 4)(5 4)(5 4)(6 3)(5 4)(4 2)(5 0)(6 1)(4 2)(7 4)(8 2)(7 4)(7 4)(7 5)(8 5)(9 6)(7 7)(7 6)(7 5)(7 5)(7 4)(9 5)(9 4)(8 5)(8 4)(7 4)(7 2)(6 2)(4 1)(3 0)(3 0)(4 0)(3 1)(4 3)(4 2)(3 2)(4 4)(5 3)(3 1)(4 2)(1 2)(2 1)(2 0)(4 1)(5 2)(5 5)(5 5)(5 6)(5 6)(6 7)(5 6)(7 6)(6 7)(5 8)(6 7)(7 6)(6 6)(7 6)(7 5)(7 5)(6 5)(7 4)(6 2)(5 2)(2 1)(2 1)(3 0)(5 1)(4 1)(3 2)(3 2)(4 2)(4 4)(4 3)(4 0)(5 2)(2 3)(1 3)(3 2)(6 3)(5 3)(5 4)(5 5)(7 5)(6 5)(6 6)(6 5)(6 6)(5 8)(4 9)(5 8)(7 7)(7 6)(6 7)(5 7)(6 7)(6 7)(6 6)(5 6)(4 6)(4 7)(3 7)(3 5)(3 5)(4 3)(3 4)(3 3)(4 3)(4 4)(4 4)(4 2)(2 2)(2 3)(1 4)(1 0)(4 0)(6 1)(5 3)(4 3)(3 5)(5 6)(5 6)(5 3)(4 2)(5 1)(2 0)(2 0)(4 1)(7 1)(7 4)(6 3)(6 5)(7 5)(9 5)(7 3)(7 3)(7 4)(6 5)(6 5)(7 4)(8 5)(8 5)(8 5)(7 4)(8 5)(7 4)(6 4)(5 1)(5 0)(1 0)(1 0)(5 0)(7 3)(7 5)(7 4)(6 4)(9 4)(8 5)(5 3)(3 1)(2 1)(1 2)(2 1)(4 2)(5 4)(7 6)(6 5)(7 6)(8 7)(8 7)(7 7)(5 7)(5 9)(5 9)(4 9)(6 8)(6 8)(5 8)(6 6)(5 7)(5 6)(5 5)(5 4)(3 3)(3 3)(2 1)(2 0)(3 0)(5 1)(2 2)(3 1)(4 2)(5 2)(4 4)(5 1)(5 1)(3 4)(2 3)(3 1)(5 1)(5 5)(4 6)(6 4)(6 5)(6 6)(6 8)(7 6)(7 6)(6 8)(5 9)(6 7)(7 6)(6 8)(4 8)(7 6)(7 6)(7 6)(6 7)(7 5)(7 5)(6 6)(4 8)(5 3)(5 2)(5 4)(3 5)(3 4)(4 4)(3 3)(4 3)(3 3)(1 1)(3 3)(1 2)(1 1)(3 1)(3 2)(3 2)(3 3)(3 2)(3 5)(4 3)(2 2)(0 0)(3 3)(2 1)(1 1)(3 1)(3 1)(3 1)(3 3)(3 3)(3 4)(4 4)(3 2)(0 1)(3 3)(1 1)(1 1)(3 1)(3 1)(2 2)(3 4)(2 3)(3 5)(3 5)(1 2)(0 2)(2 3) ) )
	NewYorkCounterpoint_2_RMS10-SC10_beatdur (bpmtobeatdur 181)
	 NewYorkCounterpoint_2_RMS10-SC10_RMS_values (list 0.016228 0.027403 0.037019 0.045012 0.053504 0.062439 0.071437 0.082940 0.096317 0.108973))
(setf NewYorkCounterpoint_2_RMS10-SC10_tune (make-instance (quote realtimetune) :grid NewYorkCounterpoint_2_RMS10-SC10_grid :chapters (quote (1)) :beatduration NewYorkCounterpoint_2_RMS10-SC10_beatdur :tunename "NewYorkCounterpoint_2_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis NewYorkCounterpoint_2_RMS10-SC10_RMS_values))
(setf (gethash (quote "NewYorkCounterpoint_2_RMS10-SC10") *available-grids*) NewYorkCounterpoint_2_RMS10-SC10_tune)

;NewYorkCounterpoint_3_RMS10-SC10
;--------------------------------------------------------------------------------------------------------------------
(setf 
	NewYorkCounterpoint_3_RMS10-SC10_grid (quote ((0 1)(0 3)(1 0)(0 5)(0 3)(0 3)(2 7)(0 1)(1 3)(0 1)(0 5)(0 1)(0 2)(0 4)(1 2)(0 5)(0 2)(0 5)(2 6)(0 1)(1 5)(0 1)(0 6)(0 1)(0 4)(0 4)(1 1)(6 2)(4 2)(0 3)(2 4)(8 3)(3 3)(7 1)(1 5)(0 1)(0 2)(0 3)(1 2)(5 1)(3 2)(0 3)(1 4)(8 5)(5 3)(5 0)(0 4)(0 1)(0 3)(3 2)(4 2)(5 2)(3 2)(0 1)(3 5)(6 5)(3 4)(4 1)(3 1)(0 1)(0 2)(4 4)(3 3)(4 3)(3 2)(0 2)(2 4)(5 4)(2 5)(4 2)(3 1)(2 2)(3 2)(3 4)(3 3)(4 2)(3 1)(3 0)(3 4)(5 2)(3 4)(3 1)(3 1)(1 1)(4 1)(3 3)(2 3)(3 1)(2 0)(2 0)(2 2)(4 3)(2 2)(2 1)(2 0)(2 1)(0 2)(0 3)(1 3)(1 1)(0 1)(0 1)(1 3)(0 5)(0 4)(0 3)(0 1)(0 2)(8 5)(5 5)(4 5)(4 2)(2 1)(2 1)(9 4)(7 5)(6 5)(4 4)(3 0)(2 2)(6 4)(4 5)(5 5)(4 3)(3 1)(2 1)(9 5)(5 6)(5 5)(4 5)(3 1)(4 2)(6 4)(5 5)(4 6)(3 3)(3 1)(2 2)(9 4)(6 5)(5 6)(3 6)(3 1)(2 1)(6 3)(4 4)(5 5)(4 1)(4 0)(3 0)(9 3)(7 1)(4 4)(4 5)(4 2)(3 2)(6 4)(5 5)(7 3)(5 1)(4 0)(2 0)(9 4)(8 3)(4 4)(4 6)(4 1)(3 2)(7 4)(6 4)(6 3)(5 2)(3 1)(1 0)(9 3)(7 3)(6 4)(4 6)(3 1)(4 1)(7 4)(6 4)(5 4)(4 0)(5 1)(2 0)(9 2)(8 3)(6 3)(5 4)(4 2)(4 1)(8 2)(6 2)(6 3)(5 3)(5 2)(2 0)(9 3)(8 3)(7 2)(7 3)(4 2)(6 0)(9 2)(6 3)(4 6)(3 3)(5 2)(2 0)(9 3)(7 3)(8 2)(7 3)(4 2)(5 0)(8 3)(7 2)(5 4)(4 1)(6 2)(3 0)(9 3)(9 3)(8 2)(8 3)(5 0)(6 0)(9 1)(7 2)(5 4)(4 3)(4 2)(2 2)(8 1)(7 3)(6 2)(5 4)(3 2)(4 0)(7 2)(6 3)(4 5)(4 2)(5 2)(2 3)(8 1)(7 3)(7 2)(5 4)(3 2)(4 1)(6 1)(6 3)(4 4)(4 3)(5 2)(2 4)(8 1)(7 3)(6 2)(5 4)(3 3)(5 1)(8 3)(7 3)(5 3)(5 1)(6 1)(3 1)(9 3)(8 4)(7 2)(7 2)(5 1)(6 0)(9 2)(8 3)(6 3)(7 1)(7 2)(3 2)(8 4)(9 4)(7 2)(7 3)(5 2)(5 0)(7 4)(3 0)(7 1)(6 5)(4 2)(5 2)(6 2)(5 1)(9 2)(3 4)(6 2)(5 1)(5 3)(5 1)(7 2)(4 6)(5 3)(4 2)(6 2)(5 2)(8 3)(2 4)(5 3)(6 2)(7 3)(6 2)(6 3)(6 0)(6 1)(4 1)(8 2)(9 3)(7 2)(7 3)(5 1)(6 1)(8 3)(7 2)(6 3)(6 0)(6 1)(4 1)(8 2)(9 3)(7 2)(7 3)(4 1)(6 1)(6 2)(7 0)(6 2)(6 4)(5 4)(7 0)(5 1)(5 0)(7 4)(4 3)(5 1)(6 2)(4 0)(6 0)(6 3)(7 2)(5 4)(5 2)(5 2)(5 1)(8 4)(6 4)(5 2)(6 1)(5 3)(9 1)(7 4)(8 0)(7 1)(3 2)(7 3)(9 4)(9 3)(7 2)(6 2)(7 0)(8 2)(9 0)(7 3)(7 0)(6 1)(2 2)(6 1)(9 2)(7 3)(8 2)(6 1)(6 0)(5 1)(8 0)(8 4)(6 2)(4 5)(5 1)(7 1)(4 1)(7 5)(7 4)(5 1)(7 4)(4 2)(8 0)(8 0)(6 0)(8 1)(4 2)(6 1)(9 3)(7 3)(8 4)(7 1)(7 0)(6 1)(9 0)(8 0)(6 1)(8 0)(4 3)(6 1)(9 2)(5 3)(9 1)(7 0)(6 0)(5 0)(8 0)(9 3)(6 1)(4 4)(5 0)(5 0)(6 1)(5 4)(7 3)(4 1)(6 2)(2 0)(8 0)(7 4)(6 1)(5 4)(4 0)(6 0)(8 2)(6 5)(7 3)(4 1)(6 3)(2 0)(7 0)(7 1)(5 0)(6 1)(3 1)(3 0)(8 3)(4 3)(7 3)(7 1)(6 2)(3 1)(6 0)(7 1)(4 3)(6 2)(2 3)(2 1)(7 3)(4 3)(7 4)(6 2)(4 2)(3 1)(4 1)(5 4)(6 1)(1 6)(3 0)(5 2)(6 2)(3 4)(7 4)(2 2)(3 4)(1 1)(5 2)(5 4)(6 1)(4 5)(3 0)(6 2)(6 5)(2 4)(7 4)(2 3)(5 6)(1 0)(3 3)(5 5)(3 4)(5 5)(2 4)(1 3)(6 7)(3 8)(5 3)(5 6)(4 4)(4 3)(3 5)(6 6)(2 6)(3 6)(1 2)(1 2)(8 7)(3 9)(6 5)(3 7)(4 3)(1 3)(5 5)(5 5)(3 6)(5 5)(2 4)(1 3)(7 7)(2 9)(5 4)(3 7)(4 4)(1 4)(5 5)(6 6)(3 6)(4 5)(2 5)(2 3)(7 8)(2 9)(5 4)(2 7)(3 2)(1 2)(3 8)(6 8)(6 7)(7 7)(5 6)(3 5)(4 9)(7 9)(8 5)(7 8)(5 6)(5 2)(3 8)(6 8)(6 7)(6 6)(5 5)(3 5)(4 9)(7 9)(8 5)(7 8)(6 6)(5 2)(2 8)(6 7)(7 7)(5 7)(4 6)(3 5)(3 9)(6 9)(5 5)(5 7)(3 6)(3 3)(4 8)(6 8)(4 7)(4 6)(3 5)(4 5)(4 6)(3 9)(3 7)(5 6)(3 7)(3 6)(4 8)(7 8)(4 7)(4 7)(3 6)(3 5)(5 5)(5 9)(4 8)(5 7)(4 6)(4 6)(5 9)(8 7)(5 7)(5 7)(5 6)(5 4)(7 6)(6 9)(4 6)(7 7)(6 7)(7 6)(7 7)(9 7)(8 7)(8 5)(7 6)(8 4)(8 7)(8 9)(6 7)(9 7) ) )
	NewYorkCounterpoint_3_RMS10-SC10_beatdur (bpmtobeatdur 181)
	 NewYorkCounterpoint_3_RMS10-SC10_RMS_values (list 0.026219 0.035415 0.043715 0.051036 0.057919 0.064210 0.070938 0.079131 0.088618 0.099624))
(setf NewYorkCounterpoint_3_RMS10-SC10_tune (make-instance (quote realtimetune) :grid NewYorkCounterpoint_3_RMS10-SC10_grid :chapters (quote (1)) :beatduration NewYorkCounterpoint_3_RMS10-SC10_beatdur :tunename "NewYorkCounterpoint_3_RMS10-SC10" :NbBeatsPerMeasure 4 :DataFromAnalysis NewYorkCounterpoint_3_RMS10-SC10_RMS_values))
(setf (gethash (quote "NewYorkCounterpoint_3_RMS10-SC10") *available-grids*) NewYorkCounterpoint_3_RMS10-SC10_tune)


;TerryRiley-InC-face1
;--------------------------------------------------------------------------------------------------------------------
(setf 
	TerryRiley-InC-face1_grid (quote ((0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 9)(0 8)(0 9)(0 7)(1 7)(3 7)(1 7)(3 6)(3 7)(3 6)(4 6)(3 7)(3 6)(2 7)(4 6)(1 7)(3 7)(3 6)(1 7)(1 7)(2 7)(1 7)(2 6)(1 6)(1 7)(1 6)(1 6)(1 6)(1 5)(3 6)(2 6)(2 5)(1 6)(3 6)(2 6)(2 6)(1 5)(2 4)(2 5)(1 5)(3 4)(4 4)(1 4)(2 4)(2 4)(1 6)(1 5)(4 4)(2 5)(2 4)(1 5)(1 4)(2 4)(3 3)(2 3)(3 3)(1 4)(2 3)(3 2)(2 2)(2 4)(3 3)(5 2)(2 3)(5 2)(1 3)(4 2)(3 3)(2 3)(1 3)(1 3)(4 3)(3 4)(3 4)(2 4)(4 3)(3 5)(2 3)(3 2)(2 2)(5 3)(6 3)(2 4)(6 2)(3 3)(2 2)(5 1)(2 1)(1 2)(3 2)(3 2)(3 3)(1 2)(3 2)(5 1)(4 1)(2 1)(2 2)(5 1)(4 2)(3 2)(6 2)(4 4)(3 1)(2 3)(3 2)(7 1)(4 2)(3 2)(7 1)(7 1)(5 3)(2 2)(5 1)(6 2)(4 2)(6 3)(6 3)(6 4)(6 4)(4 5)(5 4)(7 4)(7 4)(8 3)(7 4)(6 3)(6 4)(7 3)(5 3)(6 2)(4 2)(8 3)(4 3)(3 2)(3 3)(4 3)(6 0)(6 1)(3 2)(2 3)(3 2)(2 3)(3 4)(4 3)(5 4)(4 4)(5 4)(5 5)(6 4)(5 5)(5 5)(8 5)(6 3)(6 5)(6 3)(4 2)(4 2)(4 2)(3 2)(2 3)(3 4)(6 2)(6 3)(5 4)(7 4)(4 4)(3 4)(4 4)(4 1)(3 4)(6 3)(4 4)(4 2)(3 2)(5 1)(6 1)(4 2)(4 2)(5 2)(4 2)(5 2)(4 2)(6 2)(4 2)(5 1)(3 1)(2 2)(3 1)(3 1)(3 1)(1 2)(3 2)(4 2)(5 1)(4 2)(4 2)(4 3)(7 4)(5 2)(4 4)(4 4)(4 4)(5 3)(3 3)(7 3)(7 2)(7 4)(6 3)(4 4)(8 2)(4 5)(5 3)(6 5)(6 3)(7 4)(4 2)(5 4)(6 2)(5 5)(6 4)(7 4)(5 3)(5 5)(6 2)(7 5)(5 3)(4 5)(5 3)(5 4)(4 3)(3 4)(5 2)(2 4)(4 1)(3 3)(3 2)(3 4)(5 2)(5 3)(5 2)(3 4)(5 2)(4 4)(5 3)(7 4)(4 3)(5 5)(5 3)(6 4)(4 2)(4 5)(3 3)(4 5)(5 2)(5 4)(6 1)(4 3)(3 1)(6 3)(3 3)(4 3)(2 3)(3 4)(3 2)(3 3)(5 2)(3 3)(1 5)(1 5)(2 4)(3 5)(1 5)(4 4)(1 3)(2 4)(1 4)(2 5)(2 3)(4 5)(1 4)(5 4)(1 4)(4 5)(0 5)(5 4)(2 3)(2 5)(2 4)(5 4)(1 4)(3 6)(2 4)(2 6)(2 4)(5 6)(1 5)(5 5)(3 4)(3 5)(3 4)(7 4)(3 4)(4 5)(3 3)(6 3)(5 3)(4 5)(6 3)(6 5)(7 2)(5 4)(7 2)(4 4)(7 3)(5 3)(7 3)(7 4)(6 3)(7 3)(5 3)(7 5)(3 3)(6 4)(7 2)(7 4)(4 3)(6 3)(4 2)(6 5)(4 3)(6 3)(4 3)(5 4)(6 2)(5 4)(5 3)(5 4)(7 2)(4 5)(5 3)(5 4)(6 4)(7 4)(6 6)(6 4)(6 4)(7 3)(6 5)(7 4)(5 3)(6 4)(7 5)(6 4)(6 5)(5 3)(5 6)(3 3)(4 3)(3 3)(4 5)(5 3)(6 6)(2 3)(3 3)(4 2)(5 4)(8 3)(6 5)(6 3)(6 6)(6 5)(9 2)(7 3)(8 5)(7 6)(8 6)(8 5)(7 5)(8 5)(4 3)(6 4)(4 2)(5 4)(5 2)(4 6)(3 1)(5 4)(4 1)(5 5)(3 1)(3 4)(2 2)(4 4)(5 1)(4 4)(5 1)(5 3)(5 2)(6 4)(6 2)(5 4)(5 2)(5 3)(7 1)(4 4)(6 2)(5 4)(4 2)(3 4)(4 3)(4 4)(4 3)(4 4)(6 2)(5 4)(5 2)(6 4)(5 3)(4 3)(7 2)(5 4)(6 2)(5 3)(7 2)(6 4)(5 3)(4 4)(6 3)(3 5)(6 3)(5 5)(6 4)(5 4)(4 4)(5 4)(5 5)(2 5)(5 4)(6 5)(3 4)(2 5)(2 4)(3 5)(3 4)(3 5)(2 4)(4 4)(3 5)(3 5)(3 5)(5 4)(3 4)(3 5)(5 4)(3 4)(2 5)(4 4)(3 5)(3 6)(2 5)(3 5)(3 6)(5 5)(4 5)(6 4)(3 5)(4 5)(4 5)(4 5)(5 5)(3 5)(5 5)(5 4)(7 3)(3 4)(5 5)(5 4)(6 4)(4 3)(7 3)(5 3)(6 3)(4 3)(5 3)(4 3)(5 3)(5 3)(5 5)(4 4)(7 4)(5 4)(6 4)(4 4)(8 3)(7 2)(7 3)(7 3)(7 4)(6 4)(7 4)(5 4)(7 4)(6 5)(7 4)(5 5)(7 4)(6 4)(6 4)(5 5)(6 3)(5 4)(5 3)(5 4)(6 4)(7 4)(8 3)(5 4)(5 4)(4 4)(4 5)(4 6)(6 5)(6 4)(5 4)(5 4)(3 6)(5 3)(3 6)(4 5)(3 6)(2 5)(3 6)(2 5)(3 6)(4 5)(2 6)(3 6)(6 4)(5 6)(4 4)(3 5)(2 6)(2 5)(4 4)(2 5)(2 6)(2 6)(2 6)(2 6)(2 5)(1 6)(1 6)(1 5)(3 6)(3 6)(2 7)(1 7)(2 7)(2 6)(2 7)(2 6)(2 6)(1 6)(1 6)(1 6)(1 7)(2 7)(2 5)(3 6)(6 4)(5 4)(4 5)(4 6)(3 5)(3 7)(2 5)(3 5)(2 6)(1 7)(2 3)(1 7)(1 6)(1 6)(0 5)(0 7)(3 4)(3 5)(1 5)(3 4)(3 5)(4 5)(3 4)(2 6)(1 5)(2 6)(2 5)(3 6)(2 5)(3 4)(3 5)(1 5)(1 7)(1 5)(2 6)(2 4)(3 5)(3 3)(4 4)(3 4)(2 6)(1 5)(0 6)(2 6)(2 5)(2 5)(2 5)(5 2)(2 5)(1 4)(1 6)(1 5)(1 6)(4 3)(2 6)(1 4)(3 4)(2 5)(1 6)(2 5)(2 6)(3 7)(2 5)(2 5)(3 5)(2 3)(1 5)(1 4)(1 7)(1 5)(2 8)(3 2)(2 6)(2 2)(2 5)(1 5)(1 6)(2 5)(0 7)(2 7)(1 5)(2 6)(1 6)(2 4)(2 6)(2 6)(1 7)(1 7)(1 7)(2 6)(2 5)(3 2)(2 3)(2 6)(0 6)(3 5)(2 7)(1 7)(1 7)(3 3)(2 4)(1 4)(2 6)(2 5)(2 5)(2 7)(2 6)(1 6)(2 6)(2 3)(4 6)(3 6)(1 7)(2 5)(2 7)(1 4)(2 7)(3 5)(7 2)(7 4)(5 3)(5 5)(5 4)(5 7)(5 6)(4 4)(5 4)(5 3)(5 6)(7 5)(5 6)(8 4)(7 7)(4 5)(5 6)(8 5)(6 5)(7 7)(7 3)(7 5)(7 3)(6 7)(7 3)(8 6)(7 4)(8 6)(4 4)(4 6)(4 4)(4 7)(6 6)(4 7)(5 5)(8 7)(6 5)(6 6)(7 5)(8 5)(8 6)(7 7)(5 6)(6 7)(6 6)(5 7)(8 6)(6 5)(7 6)(8 6)(8 6)(9 6)(8 2)(9 6)(8 7)(8 6)(9 3)(7 7)(8 4)(7 6)(7 5)(4 6)(6 7)(7 5)(7 4)(9 5)(9 5)(9 6)(9 7)(8 6)(8 5)(8 7)(7 6)(8 6)(7 4)(6 6)(6 6)(7 5)(6 5)(8 7)(8 7)(5 6)(5 7)(8 6)(6 6)(7 7)(6 7)(5 4)(6 7)(5 4)(4 7)(4 4)(5 6)(8 3)(6 7)(8 4)(8 6)(7 3)(6 6)(7 3)(7 6)(6 3)(4 5)(4 6)(4 5)(5 4)(7 5)(7 5)(7 4)(5 5)(8 7)(7 6)(8 6)(6 3)(3 6)(6 6)(4 5)(6 3)(3 7)(5 5)(8 6)(7 5)(5 7)(7 6)(6 5)(6 4)(2 7)(5 6)(6 6)(6 4)(2 6)(4 5)(3 6)(6 4)(4 6)(9 6)(9 4)(9 4)(7 5)(7 4)(7 4)(7 3)(7 4)(8 5)(6 5)(6 4)(3 6)(6 6)(8 5)(7 3)(4 6)(8 4)(7 5)(8 4)(3 6)(5 5)(6 6)(7 2)(6 6)(7 4)(4 4)(5 3)(4 7)(7 3)(6 6)(7 3)(9 6)(7 3)(7 3)(7 3)(6 2)(7 4)(6 2)(7 3)(3 3)(6 3)(5 3)(9 4)(6 3)(5 5)(6 5)(7 3)(8 3)(8 3)(8 4)(9 4)(7 3)(7 4)(8 5)(7 4)(7 4)(7 3)(9 5)(7 3)(6 2)(8 3)(7 2)(7 4)(7 2)(7 2)(7 4)(8 3)(7 2)(9 3)(8 3)(9 4)(6 5)(9 4)(8 4)(7 5)(5 3)(8 5)(7 4)(7 4)(7 3)(7 7)(5 6)(7 5)(6 4)(8 4)(9 3)(7 6)(9 3)(9 5)(8 3)(7 4)(8 5)(8 4)(8 1)(8 3)(7 5)(8 5)(9 4)(8 5)(7 4)(9 5)(9 4)(8 4)(8 2)(8 4)(7 3)(7 6)(7 7)(3 3)(4 4)(5 5)(5 4)(5 2)(9 2)(4 3)(9 5)(4 4)(4 4)(3 3)(5 4)(2 4)(4 4)(4 2)(5 4)(5 6)(4 3)(6 2)(6 6)(6 3)(6 5)(4 2)(6 6)(3 2)(4 6)(2 4)(6 7)(3 2)(2 4)(0 3)(6 7)(5 2)(4 4)(5 7)(6 7)(4 2)(4 4)(2 2)(4 6)(1 2)(4 2)(1 2)(7 7)(2 4)(6 3)(4 2)(7 6)(5 2)(7 3)(5 2)(7 7)(6 4)(7 3)(5 2)(8 6)(6 1)(6 3)(4 2)(8 6)(8 1)(8 4)(8 2)(7 7)(4 2)(7 4)(5 2)(6 7)(4 3)(6 4)(5 5)(7 7)(5 3)(7 4)(8 2)(7 7)(6 2)(6 3)(5 2)(6 4)(5 3)(5 5)(4 5)(5 4)(4 4)(5 5)(5 3)(6 6)(4 5)(5 3)(4 4)(6 4)(4 3)(5 2)(5 2)(6 2)(5 3)(7 4)(4 3)(5 3)(5 3)(6 2)(8 2)(7 1)(5 2)(7 3)(8 1)(8 2)(7 2)(5 2)(7 2)(7 3)(5 2)(5 2)(8 2)(8 3)(8 2)(8 4)(8 2)(6 1)(5 1)(7 1)(6 2)(6 1)(7 4)(8 4)(6 2)(4 2)(4 4)(5 2)(5 2)(4 4)(3 3)(5 4)(2 2)(4 4)(4 4)(5 3)(5 5)(6 4)(5 4)(4 5)(5 5)(5 4)(5 5)(7 4)(6 3)(6 3)(5 4)(6 3)(4 3)(5 5)(5 4)(7 3)(4 4)(4 4)(5 2)(7 3)(6 3)(6 1)(5 1)(8 1)(8 1)(7 0)(7 2)(7 1)(7 2)(6 2)(4 0)(6 1)(5 4)(7 2)(7 2)(8 2)(7 1)(6 2)(8 2)(8 1)(7 2)(8 2)(7 2)(8 1)(7 3)(8 2)(8 2)(8 3)(8 2)(8 3)(8 3)(8 2)(8 2)(8 4)(9 1)(8 3)(8 2)(8 2)(7 2)(7 3)(8 3)(6 4)(7 3)(7 3)(9 3)(7 3)(8 2)(5 3)(8 4)(8 3)(8 3)(7 4)(7 4)(4 5)(5 4)(5 3)(8 5)(7 3)(7 2)(6 5)(5 3)(7 2)(8 4)(8 4)(7 3)(6 4)(6 4)(7 4)(9 4)(7 3)(8 5)(8 5)(7 4)(7 3)(7 4)(7 3)(8 2)(5 4)(5 3)(6 3)(6 4)(7 3)(8 3)(8 3)(8 2)(7 2)(8 3)(6 3)(9 2)(8 2)(7 2)(8 2)(8 3)(7 2)(6 2)(7 4)(6 5)(6 2)(8 3)(7 3)(6 3)(7 4)(5 3)(6 4)(6 5)(6 4)(7 3)(7 4)(5 4)(6 3)(7 4)(6 4)(7 3)(6 4)(6 3)(6 3)(6 3)(5 3)(6 4)(5 4)(4 4)(5 3)(4 4)(3 4)(3 2)(7 2)(7 2)(4 3)(6 3)(6 2)(7 2)(7 3)(7 2)(7 2)(8 3)(7 3)(8 3)(8 4)(7 2)(6 3)(7 4)(7 4)(6 2)(8 3)(6 2)(7 2)(6 3)(5 4)(5 3)(6 4)(7 3)(5 3)(5 4)(4 3)(5 4)(6 3)(5 5)(5 3)(4 5)(4 3)(4 5)(4 4)(5 6)(4 4)(3 4)(6 3)(5 4)(6 5)(7 4)(5 3)(6 4)(6 2)(5 3)(7 3)(8 4)(6 2)(5 4)(7 2)(5 3)(8 3)(7 4)(7 3)(7 5)(8 3)(7 3)(9 3)(8 3)(8 4)(8 4)(8 3)(9 3)(9 4)(9 3)(7 2)(7 3)(9 3)(9 3)(8 3)(8 5)(8 4)(7 5)(9 3)(5 3)(7 3)(7 4)(4 3)(8 5)(7 2)(7 2)(6 4)(8 3)(7 3)(7 4)(7 4)(5 4)(5 2)(6 3)(7 3)(7 4)(7 3)(5 3)(4 3)(5 3)(5 2)(5 3)(5 4)(2 3)(3 4)(4 4)(3 5)(5 2)(6 3)(5 4)(4 4)(5 3)(7 5)(6 3)(3 3)(3 6)(3 4)(7 4)(7 5)(4 4)(6 3)(7 2)(7 2)(7 1)(9 2)(9 1)(7 5)(5 2)(7 1)(7 4)(7 1)(7 2)(5 2)(5 2)(8 3)(8 2)(8 4)(8 2)(6 3)(7 2)(8 2)(8 3)(9 4)(9 3)(9 2)(9 2)(9 2)(9 3)(9 3)(9 2)(9 3)(9 2)(9 2)(8 3)(9 4)(9 2)(8 2)(7 2)(9 2)(9 3)(9 3)(9 2)(9 2)(9 5)(9 1)(7 4)(9 3)(9 2)(9 2)(8 4)(9 2)(7 3)(9 4)(9 3)(9 5)(8 5)(9 0)(9 1)(9 4)(9 1)(8 5)(9 5)(9 1)(8 2)(8 4)(9 2)(8 5)(9 4)(8 1)(8 3)(9 3)(9 2)(9 4)(8 3)(6 2)(6 1)(9 2)(8 0)(9 3)(7 6)(8 1)(8 1)(8 3)(8 1)(8 3)(8 7)(7 1)(8 1)(7 2)(9 0)(9 3)(9 5)(7 1)(4 0)(6 2)(5 1)(6 2)(6 7)(6 3)(7 0)(8 2)(8 1)(5 1)(6 7)(8 3)(7 0)(5 3)(6 2)(7 2)(6 6)(5 3)(5 2)(6 4)(3 2)(2 3)(6 7)(9 3)(7 1)(5 4)(2 5)(8 2)(5 6)(6 1)(5 1)(7 4)(6 2)(5 1)(5 5)(7 3)(6 5)(5 2)(5 3)(8 1)(6 6)(5 3)(6 5)(9 1)(7 5)(8 2)(6 6)(8 3)(6 4)(6 1)(4 5)(6 2)(4 6)(6 4)(5 6)(7 1)(4 5)(4 2)(4 5)(8 4)(4 5)(7 2)(4 5)(9 1)(7 4)(7 6)(5 6)(7 1)(3 5)(4 2)(5 4)(7 2)(5 5)(4 2)(5 5)(8 2)(4 4)(6 7)(7 7)(7 1)(4 1)(3 4)(2 5)(8 5)(3 7)(3 2)(6 1)(7 4)(5 3)(4 6)(3 7)(5 1)(5 1)(7 5)(5 4)(7 5)(3 3)(3 2)(4 3)(7 4)(3 5)(4 6)(3 6)(4 2)(1 1)(1 3)(3 5)(8 4)(3 5)(2 4)(1 5)(3 3)(2 4)(2 4)(2 3)(2 3)(0 4)(1 5)(0 4)(3 3)(1 4)(1 4)(6 2)(7 3)(5 5)(5 2)(6 2)(7 3)(6 2)(6 3)(5 3)(5 1)(6 2)(5 3)(6 2)(7 2)(5 2)(5 1)(5 2)(6 3)(5 3)(7 2)(7 2)(7 1)(6 2)(6 5)(5 3)(5 1)(5 2)(7 3)(5 2)(7 4)(6 4)(6 3)(4 2)(3 2)(2 4)(4 7)(2 5)(7 2)(4 2)(3 4)(3 3)(6 5)(5 2)(5 2)(4 1)(5 1)(3 3)(4 2)(5 2)(5 3)(2 3)(4 3)(5 2)(6 2)(4 2)(5 3)(6 1)(6 1)(5 2)(5 2)(6 2)(6 2)(4 2)(5 4)(4 2)(3 3)(2 2)(5 4)(3 2)(5 2)(3 4)(5 3)(4 3)(6 2)(4 2)(6 5)(7 2)(6 1)(4 1)(6 5)(5 1)(4 2)(3 3)(4 4)(3 1)(4 1)(3 1)(7 3)(3 2)(5 2)(5 1)(6 4)(4 2)(5 1)(5 1)(5 4)(6 2)(7 3)(7 1)(7 3)(5 2)(5 2)(6 3)(5 2)(5 2)(6 2)(6 2)(6 1)(8 3)(5 3)(6 2)(6 1)(7 3)(6 2)(5 3)(6 2)(8 2)(6 3)(6 4)(6 2)(6 4)(5 3)(5 2)(5 3)(4 6)(5 3)(4 2)(6 4)(7 4)(5 2)(5 3)(6 2)(5 4)(6 2)(5 1)(6 1)(5 2)(7 2)(5 2)(4 3)(4 2)(5 2)(2 2)(2 1)(2 1)(5 3)(4 3)(4 3)(4 3)(4 3)(2 3)(1 4)(3 3)(5 2)(4 3)(3 2)(2 2)(6 2)(2 1)(2 2)(5 1)(6 1)(6 1)(6 2)(6 2)(7 1)(6 1)(5 2)(8 1)(7 1)(7 2)(7 2)(9 2)(7 3)(6 2)(5 2)(7 3)(6 1)(7 1)(6 2)(7 2)(7 1)(6 1)(5 0)(7 0)(6 1)(6 1)(6 0)(7 1)(5 2)(6 1)(6 0)(7 1)(7 1)(6 1)(5 2)(7 1)(4 1)(3 2)(4 3)(5 1)(6 2)(5 2)(6 1)(7 1)(6 1)(7 1)(6 2)(7 0)(6 1)(5 2)(5 1)(5 0)(3 2)(3 1)(3 0)(5 0)(3 1)(4 0)(4 1)(5 0)(3 1)(2 1)(1 0)(3 0)(3 2)(3 1)(2 1)(4 0)(2 1)(2 2)(3 2)(6 2)(6 1)(5 2)(6 0)(7 0)(4 0)(4 2)(4 1)(7 1)(5 1)(4 3)(5 1)(7 1)(5 0)(5 2)(5 1)(7 1)(5 1)(3 3)(4 1)(7 2)(5 1)(3 5)(2 4)(5 3)(4 2)(4 4)(3 2)(5 2)(2 2)(3 4)(3 2)(4 1)(4 3)(3 4)(4 3)(6 2)(4 2)(3 4)(6 2)(6 2)(3 3)(4 4)(4 2)(5 1)(5 2)(3 2)(5 2)(7 2)(4 2)(4 1)(6 2)(5 0)(5 2)(5 3)(3 2)(6 1)(5 3)(2 4)(2 2)(4 1)(3 5)(2 3)(4 2)(4 1)(2 3)(3 2)(1 2)(3 0)(3 4)(2 2)(1 2)(3 2)(3 5)(3 1)(3 3)(3 2)(4 5)(5 2)(4 2)(6 2)(7 3)(3 1)(5 2)(6 2)(5 1)(6 2)(6 3)(4 2)(6 2)(4 2)(3 2)(4 3)(6 3)(1 1)(3 1)(5 1)(3 1)(3 2)(5 2)(4 2)(4 2)(6 3)(4 2)(4 3)(8 2)(5 2)(6 2)(7 2)(4 4)(3 3)(7 3)(4 3)(5 2)(5 2)(6 3)(5 2)(5 2)(4 5)(5 2)(3 3)(5 3)(5 2)(5 2)(4 3)(6 2)(4 2)(6 4)(5 2)(7 2)(4 2)(5 3)(4 3)(7 3)(5 2)(8 2)(5 1)(8 2)(7 2)(7 3)(4 2)(6 2)(4 4)(6 2)(6 1)(7 3)(3 3)(4 3)(3 2)(6 4)(2 2)(4 3)(4 2)(5 3)(4 3)(6 2)(3 2)(5 3)(6 1)(5 3)(5 2)(7 3)(4 3)(6 4)(5 2)(5 3)(5 2)(6 2)(4 2)(6 4)(4 3)(6 3)(5 3)(5 4)(3 2)(5 3)(3 4)(4 3)(3 1)(5 2)(5 2)(6 3)(5 4)(7 3)(5 3)(4 2)(4 1)(7 1)(8 1)(7 1)(5 1)(6 1)(4 0)(4 1)(5 1)(6 1)(6 1)(5 0)(5 0)(5 2)(4 1)(6 2)(4 2)(5 2)(3 1)(3 0)(2 1)(6 1)(3 1)(4 1)(4 1)(4 0)(4 0)(6 0)(2 0)(7 0)(4 0)(4 0)(3 0)(5 1)(4 2)(3 0)(3 1)(4 2)(3 0)(3 2)(3 3)(4 0)(4 2)(3 1)(5 2)(5 1)(3 2)(3 0)(4 2)(3 2)(5 0)(8 1)(3 2)(3 0)(5 2)(5 2)(6 0)(6 2)(6 2)(6 0)(5 1)(5 2)(5 0)(6 1)(8 1)(8 0)(6 1)(7 2)(8 0)(7 1)(5 2)(8 0)(5 2)(7 1)(8 0)(7 1)(7 1)(9 0)(8 1)(8 1)(8 0)(9 1)(7 1)(7 1)(8 1)(8 2)(8 1)(8 2)(8 3)(7 0)(7 1)(8 3)(7 0)(6 1)(9 4)(6 1)(6 1)(9 3)(9 0)(8 1)(6 3)(8 1)(8 1)(8 3)(8 1)(8 2)(8 3)(8 1)(7 1)(8 2)(8 1)(7 1)(7 2)(8 0)(7 1)(8 2)(9 0)(8 2)(8 1)(8 0)(8 2)(7 2)(7 0)(7 2)(5 2)(7 0)(7 2)(8 2)(7 1)(6 1)(8 1)(6 1)(7 1)(7 0)(6 0)(7 0)(6 1)(6 0)(8 1)(7 1)(5 0)(6 0)(7 0)(5 0)(6 1)(6 1)(5 0)(7 0)(7 1)(5 1)(6 1)(7 1)(5 0)(7 0)(7 1)(6 0)(6 0)(7 2)(6 0)(7 0)(5 1)(5 0)(7 0)(6 1)(4 0)(5 1)(7 1)(6 0)(5 1)(5 0)(4 2)(5 0)(5 0)(3 3)(5 0)(6 0)(4 2)(5 1)(6 1)(4 2)(6 1)(4 1)(4 2)(5 1)(4 0)(3 1)(3 3)(2 0)(3 1)(3 0)(3 0)(4 0)(4 1)(3 2)(5 3)(5 2)(5 2)(6 1)(7 2)(5 1)(6 2)(5 1)(5 1)(6 2)(6 1)(5 1)(7 2)(5 1)(6 1)(6 2)(7 2)(8 1)(5 2)(7 1)(5 1)(7 3)(8 2)(5 2)(5 2)(5 1)(4 2)(6 2)(7 1)(4 2)(2 3)(4 1)(6 1)(5 2)(7 3)(7 2)(5 2)(7 2)(4 3)(4 2)(6 2)(5 2)(4 1)(5 3)(6 1)(5 1)(7 1)(6 2)(3 2)(6 0)(6 3)(5 3)(4 1)(6 2)(5 2)(5 3)(6 2)(5 2)(6 2)(6 2)(5 2)(5 0)(5 2)(5 2)(6 3)(4 3)(4 3)(4 1)(5 3)(4 2)(5 2)(5 3)(4 2)(4 0)(4 2)(5 2)(5 3)(4 4)(3 2)(4 1)(2 4)(3 1)(4 0)(3 5)(4 1)(5 0)(5 2)(5 1)(5 2)(4 3)(5 2)(5 2)(4 2)(5 0)(5 2)(3 2)(5 0)(4 1)(4 1)(6 0)(6 2)(5 3)(4 0)(3 2)(3 2)(3 1)(3 2)(3 3)(2 1)(3 2)(3 2)(4 2)(3 0)(2 3)(3 2)(3 1)(3 2)(3 3)(3 5)(4 3)(5 3)(5 3)(3 2)(3 5)(4 2)(3 1)(5 4)(4 3)(4 2)(4 4)(4 3)(4 3)(5 3)(3 2)(3 2)(4 3)(4 2)(3 1)(4 1)(3 2)(3 3)(4 3)(5 3)(2 2)(4 2)(3 3)(2 2)(3 2)(2 3)(3 1)(2 3)(3 2)(2 4)(2 3)(3 2)(1 3)(3 3)(3 4)(3 2)(2 3)(3 2)(2 1)(4 2)(3 3)(3 4)(5 4)(4 5)(4 1)(4 3)(5 3)(4 1)(3 3)(4 4)(4 2)(5 3)(6 3)(5 2)(4 5)(5 3)(6 0)(6 3)(7 2)(6 2)(6 1)(7 1)(4 0)(5 2)(7 1)(6 2)(7 2)(6 3)(4 2)(4 3)(6 2)(6 1)(5 2)(6 2)(4 1)(5 3)(5 3)(4 2)(4 3)(6 5)(2 2)(4 3)(5 5)(3 4)(4 5)(5 5)(4 4)(4 2)(3 4)(3 2)(3 3)(5 3)(2 2)(2 4)(3 3)(2 1)(4 5)(3 4)(1 3)(1 4)(2 4)(2 2)(2 5)(2 5)(1 3)(1 1)(0 4)(1 2)(3 2)(5 2)(2 3)(4 2)(3 1)(2 2)(3 3)(8 1)(5 4)(5 2)(6 1)(2 1)(4 4)(3 2)(2 3)(3 5)(4 2)(3 2)(5 3)(3 1)(3 1)(4 1)(2 1)(3 5)(3 1)(2 1)(1 4)(3 1)(1 4)(1 6)(1 1)(2 1)(1 1)(1 1)(0 3)(0 3)(0 4)(0 4)(0 4)(1 2)(0 4)(0 3)(0 3)(1 3)(0 3)(0 2)(1 2)(0 2)(0 4)(0 1)(0 3)(0 4)(1 2)(0 2)(0 1)(1 1)(1 2)(1 0)(1 2)(0 2)(0 3)(0 1)(0 0)(1 3)(0 3)(0 1)(1 2)(1 1)(0 1)(1 3)(0 2)(0 1)(2 1)(0 1)(1 1)(2 4)(0 2)(1 1)(1 1)(1 1)(2 1)(1 0)(0 2)(2 2)(1 3)(1 2)(1 1)(1 2)(1 0)(1 0)(1 2)(1 1)(1 1)(1 1)(1 3)(0 0)(1 1)(1 3)(1 1)(1 1)(2 6)(1 1)(1 1)(2 4)(2 1)(1 2)(3 5)(3 1)(3 0)(3 4)(3 0)(3 0)(3 2)(2 0)(2 1)(4 3)(3 0)(3 0)(3 2)(2 0)(3 0)(4 4)(3 1)(4 0)(5 4)(3 1)(4 0)(6 1)(5 2)(3 1)(4 2)(3 1)(3 1)(3 3)(1 3)(1 1)(3 2)(2 2)(3 1)(3 1)(2 2)(1 2)(1 5)(1 2)(1 1)(2 5)(1 2)(1 2)(2 4)(1 2)(1 2)(3 2)(4 1)(2 2)(4 1)(2 1)(3 1)(4 2)(1 1)(3 2)(1 1)(4 2)(3 2)(4 0)(4 0)(3 4)(5 1)(3 0)(3 4)(2 0)(4 0)(4 1)(3 0)(2 0)(3 2)(3 1)(5 0)(7 3)(5 1)(2 1)(3 3)(4 0)(4 1)(5 2)(4 0)(4 0)(5 2)(4 0)(4 0)(5 2)(4 0)(3 0)(4 2)(3 0)(3 0)(4 2)(3 0)(3 0)(3 1)(2 0)(1 0)(2 1)(1 2)(3 0)(5 1)(3 0)(2 0)(2 2)(3 0)(1 0)(1 1)(3 1)(1 1)(4 1)(1 3)(1 3)(3 3)(2 2)(1 1)(2 3)(1 2)(1 3)(2 3)(2 1)(1 2)(1 3)(1 2)(0 3)(0 3)(0 2)(0 4)(0 2)(0 3)(0 1)(0 1)(0 1)(0 2)(0 4)(0 2)(0 2)(0 2)(0 2)(1 2)(0 3)(1 2)(1 2)(1 1)(1 2)(1 1)(2 3)(1 1)(0 1)(1 5)(0 3)(2 1)(1 3)(1 2)(2 3)(3 2)(1 2)(2 2)(1 3)(1 2)(2 2)(2 3)(1 1)(2 1)(2 1)(1 2)(1 2)(3 2)(1 2)(1 3)(2 2)(1 1)(1 2)(2 1)(1 2)(2 2)(1 3)(0 3)(1 5)(0 3)(0 3)(2 1)(1 3)(1 2)(1 1)(0 1)(0 1)(1 1)(2 3)(1 3)(2 4)(2 2)(2 1)(1 2)(1 3)(1 2)(1 3)(1 2)(1 3)(1 2)(0 5)(1 3)(2 3)(2 2)(2 4)(3 2)(4 1)(3 2)(3 2)(4 1)(2 2)(3 1)(3 3)(4 1)(3 1)(4 1)(4 2)(4 3)(3 2)(3 1)(3 2)(2 1)(3 0)(3 1)(2 2)(2 1)(4 1)(2 1)(2 2)(2 1)(2 2)(2 1)(1 0)(1 2)(2 1)(1 1)(1 1)(3 1)(1 1)(2 2)(1 2)(1 1)(1 2)(1 1)(0 1)(1 0)(2 0)(2 0)(3 0)(2 1)(4 0)(2 0)(2 0)(1 1)(2 1)(2 1)(2 1)(1 0)(2 0)(3 0)(3 1)(4 0)(4 0)(4 0)(3 1)(6 2)(7 0)(7 1)(6 0)(4 1)(5 1)(6 1)(5 0)(4 1)(6 0)(4 0)(5 0)(6 1)(6 1)(5 0)(7 0)(4 1)(6 0)(5 0)(7 0)(5 0)(7 0)(6 0)(6 0)(7 0)(5 0)(5 2)(4 2)(4 1)(5 0)(4 1)(4 1)(6 1)(4 0)(3 0)(3 0)(3 0)(2 3)(4 1)(3 1)(2 2)(5 0)(4 1)(4 1)(4 0)(4 1)(4 1)(3 0)(3 0)(3 2)(3 0)(3 1)(2 2)(4 1)(4 1)(3 1)(3 1)(3 1)(4 2)(2 1)(2 2)(2 2)(2 3)(2 2)(2 3)(3 1)(4 1)(2 0)(3 1)(4 2)(3 1)(3 0)(3 0)(3 0)(6 1)(6 0)(4 0)(3 0)(5 0)(3 0)(4 0)(3 0)(3 0)(4 0)(4 0)(2 0)(2 2)(3 0)(2 1)(3 1)(2 1)(1 0)(3 1)(3 0)(4 0)(3 2)(2 0)(2 0)(2 1)(2 1)(3 0)(3 1)(3 0)(2 1)(2 0)(3 1)(2 1)(2 0)(2 0)(1 1)(3 1)(2 1)(1 1)(2 0)(2 3)(2 0)(2 2)(1 1)(3 2)(3 2)(4 1)(3 0)(2 1)(5 0)(4 0)(3 0)(2 0)(3 1)(3 0)(6 0)(3 0)(3 0)(4 0)(4 0)(2 1)(2 0)(2 1)(1 0)(4 0)(5 0)(4 0)(5 0)(5 0)(6 0)(3 0)(3 0)(3 0)(4 0)(2 0)(3 0)(4 0)(5 1)(4 1)(2 1)(2 0)(4 0)(3 0)(2 0)(3 1)(4 0)(3 1)(3 0)(2 0)(2 1)(2 0)(4 0)(2 1)(3 1)(4 1)(4 0)(4 0)(3 1)(2 2)(2 0)(3 1)(3 0)(2 0)(3 0)(3 0)(4 0)(3 0)(2 0)(1 0)(4 0)(3 0)(2 0)(3 0)(4 0)(5 0)(3 0)(3 0)(2 0)(3 0)(2 0)(2 0)(3 0)(4 0)(4 0)(2 0)(2 0)(2 0)(4 0)(2 0)(1 0)(3 0)(4 0)(3 0)(3 0)(4 0)(5 0)(5 0)(4 0)(2 0)(4 0)(5 0)(5 0)(3 0)(3 0)(4 0)(5 0)(4 0)(7 0)(3 0)(5 0)(6 0)(4 1)(4 0)(3 0)(5 1)(5 1)(5 0)(7 0)(7 0)(7 0)(4 0)(3 0)(4 0)(3 0)(6 0)(6 0)(8 0)(8 0)(5 1)(3 0)(5 1)(7 0)(6 0)(5 0)(4 0)(4 0)(6 0)(6 0)(2 1)(3 0)(3 1)(2 2)(5 0)(5 1)(5 0)(4 0)(5 0)(4 1)(3 0)(4 1)(3 1)(5 0)(5 1)(7 0)(7 0)(5 0)(4 0)(3 1)(4 1)(4 0)(2 0)(4 0)(4 0)(4 1)(5 1)(2 1)(2 1)(5 2)(2 1)(3 0)(3 0)(2 1)(4 0)(6 0)(4 1)(2 1)(3 0)(3 1)(3 0)(5 1)(6 2)(6 0)(5 2)(3 2)(3 4)(2 2)(3 2)(2 5)(3 2)(3 0)(2 5)(2 1)(1 0)(1 5)(1 2)(2 0)(2 4)(1 3)(1 1)(2 3)(1 2)(1 1)(1 4)(1 3)(0 2)(1 5)(0 4)(0 1)(0 3)(1 4)(0 2)(1 4)(0 4)(0 2)(0 4)(0 4)(0 1)(0 4)(1 2)(1 1)(1 4)(1 3)(0 1)(1 5)(0 0)(0 0)(1 4)(1 2)(1 1)(1 5)(1 4)(1 1)(0 4)(0 1)(0 2)(0 5)(1 2)(0 2)(0 5)(0 2)(1 2)(1 4)(0 2)(0 1)(1 2)(1 6)(0 0)(1 2)(0 4)(1 1)(2 3)(1 5)(0 1)(3 1)(3 4)(2 0)(2 1)(2 3)(3 0)(2 1)(2 2)(1 1)(1 0)(1 1)(2 0)(2 0)(3 3)(1 0)(2 0)(1 4)(0 0)(1 0)(1 3)(0 0)(1 1)(1 4)(3 1)(4 1) ) )
	TerryRiley-InC-face1_beatdur (bpmtobeatdur 132)
	 TerryRiley-InC-face1_RMS_values (list 0.089716 0.105730 0.119145 0.131119 0.142320 0.154668 0.165630 0.177409 0.191399 0.210285))
(setf TerryRiley-InC-face1_tune (make-instance (quote realtimetune) :grid TerryRiley-InC-face1_grid :chapters (quote (1)) :beatduration TerryRiley-InC-face1_beatdur :tunename "TerryRiley-InC-face1" :NbBeatsPerMeasure 4 :DataFromAnalysis TerryRiley-InC-face1_RMS_values))
(setf (gethash (quote "TerryRiley-InC-face1") *available-grids*) TerryRiley-InC-face1_tune)


;TerryRiley-InC-face2
;--------------------------------------------------------------------------------------------------------------------
(setf 
	TerryRiley-InC-face2_grid (quote ((4 7)(3 6)(3 3)(3 0)(4 5)(4 4)(7 0)(7 6)(5 2)(4 4)(4 7)(3 6)(3 5)(4 8)(4 5)(3 2)(4 8)(4 3)(3 2)(4 8)(3 5)(3 1)(4 7)(3 6)(3 4)(4 5)(3 5)(3 5)(3 7)(3 5)(3 5)(3 8)(3 8)(3 4)(3 6)(3 7)(3 4)(3 8)(3 8)(3 6)(3 8)(3 7)(3 4)(3 7)(3 4)(3 3)(3 8)(3 6)(3 4)(3 7)(3 4)(3 2)(3 6)(3 4)(3 3)(3 7)(3 7)(3 3)(3 7)(3 4)(3 4)(3 8)(3 4)(3 4)(3 7)(3 5)(3 5)(3 7)(3 5)(3 3)(3 5)(3 7)(3 2)(3 4)(3 6)(3 2)(4 6)(3 8)(3 2)(4 4)(4 6)(3 0)(4 2)(4 5)(4 0)(4 2)(4 4)(4 2)(4 2)(5 2)(4 2)(5 2)(6 5)(5 3)(6 4)(6 1)(6 5)(6 2)(6 0)(6 5)(6 4)(5 1)(6 1)(5 3)(6 1)(5 3)(6 2)(6 1)(6 3)(6 1)(6 0)(6 4)(6 0)(6 1)(4 5)(4 1)(4 0)(4 4)(4 2)(4 2)(4 4)(4 3)(4 3)(4 2)(4 2)(4 1)(3 2)(3 1)(3 2)(3 0)(4 2)(3 4)(3 3)(4 4)(4 4)(4 4)(5 2)(5 2)(5 1)(6 2)(6 2)(6 4)(7 3)(6 1)(6 4)(5 3)(5 2)(5 4)(4 4)(6 3)(7 5)(7 2)(7 2)(6 5)(6 4)(6 2)(6 5)(6 2)(6 3)(5 5)(5 5)(7 4)(6 4)(7 5)(7 3)(6 4)(7 2)(6 3)(6 4)(7 2)(7 1)(5 0)(5 3)(5 3)(4 1)(6 3)(6 4)(4 1)(5 2)(5 1)(5 0)(5 2)(4 2)(4 3)(4 4)(4 3)(4 2)(5 2)(4 3)(4 1)(4 4)(5 2)(5 0)(5 2)(5 2)(5 0)(6 2)(6 3)(6 2)(5 3)(5 3)(5 2)(5 4)(6 2)(5 1)(5 1)(4 5)(4 2)(4 2)(5 2)(4 1)(5 1)(4 1)(4 1)(4 1)(5 3)(5 0)(5 1)(4 2)(3 1)(3 3)(4 2)(4 2)(5 1)(4 4)(5 0)(3 3)(4 4)(4 2)(4 2)(4 4)(4 3)(5 4)(6 4)(5 2)(5 2)(5 3)(6 1)(5 1)(4 2)(4 2)(6 1)(7 1)(5 0)(3 2)(3 2)(4 2)(7 1)(6 1)(4 0)(4 2)(6 0)(4 1)(5 2)(6 2)(5 0)(5 2)(6 0)(5 2)(5 2)(6 1)(6 2)(5 3)(6 0)(5 2)(6 4)(6 2)(6 0)(5 4)(5 3)(5 2)(5 2)(7 2)(6 3)(6 3)(6 0)(6 1)(6 4)(6 2)(5 1)(6 4)(6 0)(5 0)(4 3)(4 1)(4 1)(5 6)(5 2)(5 1)(5 5)(5 3)(5 1)(5 6)(4 1)(4 1)(4 4)(4 4)(4 0)(5 4)(4 1)(4 1)(4 6)(4 1)(4 1)(5 6)(4 2)(4 2)(6 5)(3 1)(4 1)(4 4)(4 0)(4 1)(4 2)(4 0)(4 0)(5 5)(4 1)(5 3)(4 5)(4 2)(3 1)(4 4)(4 5)(5 1)(4 5)(5 3)(7 3)(6 5)(7 5)(7 1)(8 2)(8 5)(7 2)(8 1)(9 4)(6 1)(8 1)(7 4)(7 0)(8 2)(7 1)(6 1)(7 5)(7 0)(8 0)(8 6)(7 0)(6 3)(5 2)(6 2)(6 3)(7 7)(5 2)(6 8)(7 6)(5 7)(4 5)(3 6)(4 8)(4 3)(4 8)(6 3)(4 2)(7 8)(8 7)(6 0)(5 2)(7 9)(6 1)(8 7)(7 6)(5 4)(5 5)(7 8)(6 3)(9 6)(7 3)(8 0)(7 4)(8 7)(8 0)(9 9)(8 5)(7 0)(7 1)(8 6)(7 2)(9 7)(8 4)(8 0)(8 1)(8 4)(9 2)(8 7)(7 1)(6 1)(7 4)(6 5)(7 3)(8 5)(7 3)(6 1)(8 0)(7 5)(6 2)(8 3)(6 1)(5 0)(7 0)(7 3)(8 2)(7 5)(5 4)(4 3)(6 2)(6 6)(6 3)(9 5)(7 3)(7 3)(7 2)(8 6)(8 2)(8 1)(5 4)(6 4)(8 0)(7 6)(5 1)(9 4)(7 5)(7 2)(8 2)(8 5)(8 3)(7 4)(5 5)(7 4)(8 5)(7 6)(6 2)(8 3)(9 7)(7 2)(7 3)(7 6)(6 3)(6 2)(7 8)(6 2)(4 5)(8 8)(6 9)(6 6)(6 8)(6 5)(6 7)(8 8)(8 7)(7 6)(7 7)(7 5)(7 5)(7 8)(6 3)(7 3)(7 5)(6 3)(5 2)(8 6)(5 6)(6 2)(8 8)(6 3)(5 3)(7 6)(5 4)(6 3)(5 7)(5 5)(6 5)(7 7)(6 3)(6 6)(8 7)(5 4)(7 5)(8 7)(7 5)(6 5)(7 8)(7 4)(6 5)(5 5)(7 4)(6 3)(7 4)(6 4)(6 4)(6 5)(6 4)(4 4)(6 6)(7 4)(7 3)(8 6)(6 5)(7 5)(6 6)(5 4)(5 4)(5 7)(7 3)(8 4)(8 5)(6 2)(6 3)(6 5)(6 3)(7 2)(7 3)(7 2)(6 2)(5 5)(5 1)(7 3)(5 2)(5 2)(6 8)(7 3)(8 5)(7 3)(8 3)(9 5)(6 2)(7 5)(8 4)(6 2)(7 1)(6 1)(7 6)(7 7)(6 1)(6 1)(6 1)(7 0)(5 3)(5 0)(4 2)(6 1)(4 2)(5 3)(5 5)(5 1)(4 3)(5 2)(3 0)(4 6)(5 4)(6 3)(5 6)(7 6)(6 5)(6 6)(7 7)(5 1)(7 1)(7 5)(6 1)(4 2)(5 2)(5 3)(5 2)(5 3)(6 1)(7 2)(6 2)(4 1)(4 1)(4 1)(6 1)(6 2)(7 2)(7 3)(6 4)(6 3)(5 5)(4 5)(6 4)(4 4)(5 5)(6 6)(5 5)(5 7)(6 6)(4 2)(4 3)(6 3)(5 4)(6 3)(8 2)(6 2)(5 1)(6 1)(5 1)(6 2)(7 4)(8 5)(8 3)(8 5)(7 6)(6 4)(7 6)(6 6)(7 5)(9 5)(6 5)(6 4)(7 3)(9 4)(8 4)(8 4)(7 5)(8 3)(8 6)(9 4)(8 6)(9 1)(6 3)(8 3)(5 2)(6 5)(7 5)(6 2)(7 0)(6 4)(5 4)(6 3)(5 3)(4 4)(5 3)(5 4)(6 2)(6 3)(7 2)(5 3)(6 0)(5 2)(5 0)(4 3)(4 3)(4 3)(5 3)(4 6)(4 4)(4 5)(6 7)(6 5)(7 4)(6 6)(6 3)(5 4)(6 5)(6 4)(6 5)(6 4)(7 3)(6 6)(8 6)(9 4)(7 6)(6 6)(7 6)(6 6)(7 9)(6 3)(6 5)(6 4)(6 4)(6 4)(8 5)(7 6)(6 6)(6 3)(6 2)(6 7)(5 4)(6 4)(5 3)(5 3)(5 2)(5 5)(5 5)(5 4)(6 5)(6 6)(6 5)(7 8)(7 5)(8 4)(7 7)(7 5)(5 7)(6 6)(6 6)(6 4)(7 4)(8 1)(8 2)(7 4)(8 2)(8 2)(8 3)(9 3)(8 2)(8 6)(8 5)(7 3)(8 4)(9 2)(8 1)(9 2)(8 3)(8 0)(8 1)(8 1)(8 1)(8 4)(9 1)(8 0)(9 4)(8 2)(7 1)(7 2)(5 4)(5 4)(6 5)(7 7)(7 4)(8 8)(7 5)(6 2)(6 5)(6 4)(5 4)(6 5)(6 4)(6 2)(6 2)(7 4)(6 3)(7 5)(7 5)(6 3)(8 5)(8 3)(7 3)(7 5)(7 4)(6 2)(7 5)(6 4)(6 3)(6 6)(8 4)(7 3)(8 5)(9 5)(8 2)(8 5)(5 6)(4 4)(7 7)(7 9)(4 3)(4 4)(4 6)(5 3)(7 3)(6 4)(6 1)(5 1)(5 4)(6 2)(6 1)(8 3)(8 0)(7 0)(6 3)(8 0)(8 3)(8 3)(6 4)(6 5)(7 5)(8 2)(8 3)(8 4)(7 2)(7 4)(7 3)(6 3)(8 4)(8 5)(7 5)(7 5)(7 4)(7 6)(8 4)(8 5)(6 7)(8 5)(8 4)(7 6)(8 3)(8 4)(8 6)(8 5)(8 6)(6 7)(6 5)(8 6)(8 7)(8 6)(7 4)(7 7)(8 7)(7 4)(7 4)(8 5)(7 2)(6 4)(8 5)(7 2)(7 3)(7 5)(7 1)(6 4)(6 5)(6 1)(6 3)(5 4)(5 1)(6 3)(7 3)(7 1)(6 2)(6 2)(6 2)(8 2)(8 2)(7 2)(7 4)(8 2)(7 1)(7 4)(8 2)(6 4)(6 4)(7 2)(7 4)(8 6)(7 5)(8 3)(9 5)(8 3)(6 4)(7 7)(8 7)(7 4)(7 6)(7 3)(7 4)(7 4)(8 4)(6 3)(6 6)(6 5)(8 2)(9 6)(7 2)(8 3)(8 6)(9 4)(8 2)(9 2)(9 0)(7 1)(5 6)(6 0)(6 3)(6 5)(7 2)(8 2)(9 5)(9 2)(9 1)(9 5)(9 1)(8 2)(8 4)(9 3)(9 0)(9 4)(8 4)(8 5)(6 7)(5 4)(5 6)(7 5)(6 5)(7 3)(6 6)(8 3)(8 3)(7 5)(7 4)(8 4)(8 3)(9 5)(7 4)(8 7)(8 7)(7 7)(8 9)(8 9)(8 9)(9 9)(9 8)(9 5)(8 6)(7 6)(9 7)(8 8)(9 6)(9 5)(8 6)(5 7)(6 5)(7 3)(6 4)(6 6)(8 6)(8 4)(9 6)(8 4)(7 3)(7 3)(8 3)(9 4)(9 4)(9 3)(9 3)(8 4)(8 4)(7 4)(9 4)(9 4)(8 3)(9 5)(9 3)(9 4)(9 4)(8 6)(9 4)(8 5)(8 5)(9 4)(9 4)(9 5)(9 5)(9 4)(9 5)(9 4)(9 1)(6 5)(4 5)(4 4)(5 5)(5 5)(6 5)(6 5)(6 5)(6 4)(6 5)(6 6)(6 5)(7 6)(7 5)(6 6)(6 4)(6 3)(5 3)(6 5)(6 2)(6 4)(5 4)(5 4)(5 2)(5 4)(6 2)(6 5)(7 4)(7 4)(7 3)(8 4)(7 3)(8 4)(9 4)(8 5)(8 5)(8 6)(8 5)(7 6)(8 5)(8 5)(9 4)(8 5)(9 5)(8 5)(9 4)(8 4)(8 3)(8 3)(7 4)(7 3)(8 2)(8 2)(8 2)(8 3)(9 4)(8 2)(8 5)(8 5)(8 4)(8 5)(7 5)(7 5)(7 5)(7 7)(7 5)(8 5)(8 6)(7 4)(8 6)(9 6)(8 5)(8 5)(8 6)(8 4)(8 4)(8 5)(8 4)(8 5)(8 3)(8 4)(7 5)(7 4)(7 4)(8 6)(8 4)(8 4)(8 4)(9 6)(9 5)(8 7)(9 5)(9 5)(8 6)(8 6)(7 6)(9 7)(8 7)(8 6)(7 7)(8 5)(8 4)(7 7)(7 4)(8 4)(9 6)(9 3)(9 2)(8 6)(9 5)(9 3)(9 5)(9 4)(9 2)(9 4)(8 2)(8 3)(8 2)(7 4)(9 3)(8 5)(9 2)(9 5)(9 4)(9 0)(9 4)(9 4)(9 1)(8 3)(9 2)(9 1)(9 2)(8 2)(7 2)(8 2)(8 2)(8 3)(9 2)(9 1)(9 0)(8 2)(9 3)(8 5)(7 1)(7 4)(8 1)(9 2)(9 3)(9 4)(9 2)(7 4)(7 5)(7 2)(8 2)(8 4)(7 3)(7 4)(7 6)(6 5)(8 8)(8 4)(7 3)(8 6)(8 3)(8 3)(9 4)(8 5)(8 4)(9 5)(9 5)(9 3)(9 3)(8 3)(7 3)(8 3)(7 2)(7 1)(7 4)(7 6)(6 8)(7 8)(7 8)(6 7)(7 8)(8 9)(6 9)(7 7)(6 6)(7 7)(8 6)(8 8)(7 8)(8 6)(7 4)(8 6)(9 6)(8 7)(8 6)(8 4)(8 4)(8 6)(8 4)(8 5)(9 6)(9 5)(8 4)(8 4)(9 6)(9 6)(9 6)(9 6)(9 6)(8 9)(7 6)(6 8)(6 7)(5 6)(6 7)(8 5)(7 6)(6 4)(9 5)(9 5)(7 6)(9 8)(9 5)(7 6)(9 5)(8 6)(8 7)(8 5)(7 5)(8 5)(8 8)(8 6)(7 8)(8 8)(7 5)(7 6)(8 9)(8 6)(8 6)(9 7)(9 4)(9 6)(9 8)(9 5)(9 5)(9 6)(8 5)(8 6)(7 5)(8 5)(9 5)(8 5)(9 6)(8 7)(9 4)(8 5)(9 4)(9 5)(9 4)(8 6)(8 6)(9 5)(8 7)(9 6)(8 7)(8 6)(8 7)(8 7)(7 5)(9 5)(7 5)(7 6)(9 5)(8 6)(6 7)(7 7)(7 6)(8 5)(8 7)(6 5)(7 6)(9 9)(6 7)(7 7)(8 8)(7 7)(6 9)(8 8)(7 8)(9 9)(9 7)(6 6)(8 8)(9 9)(9 7)(8 8)(9 8)(8 8)(6 9)(9 8)(7 9)(8 7)(7 7)(7 8)(7 7)(8 7)(8 6)(8 7)(9 5)(8 5)(9 5)(8 4)(7 6)(7 5)(9 5)(9 5)(8 6)(9 5)(9 6)(9 5)(8 6)(9 6)(7 6)(8 5)(8 8)(7 7)(8 5)(9 6)(7 5)(9 3)(9 5)(7 7)(9 5)(9 2)(8 7)(9 5)(9 5)(9 9)(9 6)(9 7)(8 8)(9 4)(9 7)(9 9)(9 4)(8 6)(8 9)(9 5)(9 6)(9 6)(9 5)(9 4)(8 6)(9 4)(9 3)(7 8)(9 5)(9 7)(8 7)(8 4)(9 4)(6 8)(7 5)(7 3)(4 8)(7 2)(6 2)(6 6)(7 5)(7 3)(6 7)(7 6)(5 3)(6 7)(6 5)(7 3)(8 8)(7 2)(7 4)(8 4)(8 2)(7 5)(7 5)(7 2)(9 5)(8 5)(9 2)(9 4)(8 6)(9 2)(9 5)(8 6)(8 4)(9 6)(8 7)(8 5)(9 6)(8 7)(8 4)(9 5)(8 8)(7 6)(7 7)(6 7)(7 4)(7 6)(6 8)(8 6)(6 4)(6 6)(7 5)(6 6)(6 5)(8 7)(8 4)(7 3)(9 5)(9 4)(6 7)(7 6)(6 7)(5 4)(6 5)(6 5)(4 5)(6 3)(7 2)(5 2)(9 0)(6 5)(7 2)(7 1)(6 2)(4 4)(5 4)(5 4)(5 5)(5 4)(5 7)(4 7)(5 6)(5 4)(4 5)(7 6)(5 6)(6 2)(9 3)(9 3)(7 2)(8 3)(9 4)(8 1)(7 2)(9 2)(8 4)(8 5)(8 4)(7 4)(8 4)(9 5)(8 4)(8 5)(8 4)(8 2)(9 5)(9 4)(9 3)(9 6)(9 6)(9 4)(9 6)(8 4)(7 2)(8 3)(7 4)(7 4)(8 5)(7 1)(8 1)(7 2)(7 3)(8 4)(7 4)(7 7)(7 8)(9 7)(7 5)(8 5)(8 5)(7 5)(7 4)(7 5)(6 7)(8 4)(8 4)(8 6)(8 4)(8 5)(8 4)(9 3)(9 5)(8 4)(7 3)(9 4)(8 5)(9 3)(9 3)(8 1)(9 1)(9 4)(8 4)(9 2)(9 2)(8 4)(8 3)(9 3)(9 3)(9 1)(9 2)(9 1)(8 1)(9 3)(8 4)(9 6)(9 1)(9 3)(8 2)(9 3)(7 7)(5 0)(6 3)(6 3)(6 5)(7 5)(4 3)(6 2)(7 3)(7 3)(9 5)(7 4)(7 5)(8 2)(7 5)(7 6)(8 5)(8 7)(7 5)(8 6)(6 8)(8 9)(9 7)(6 4)(8 3)(7 5)(6 9)(8 8)(7 3)(5 5)(8 9)(8 5)(6 7)(7 8)(8 4)(6 9)(7 8)(9 7)(7 6)(9 9)(9 6)(8 7)(9 8)(7 6)(7 5)(8 7)(8 8)(9 3)(8 6)(8 5)(9 9)(8 9)(7 5)(7 3)(9 4)(8 6)(8 9)(8 5)(8 4)(7 7)(9 7)(8 8)(8 7)(8 3)(8 4)(7 7)(9 6)(8 8)(8 7)(8 3)(7 8)(8 8)(9 7)(7 4)(8 4)(7 7)(8 9)(8 9)(7 5)(7 2)(7 7)(7 7)(7 8)(5 9)(6 4)(6 4)(5 9)(6 7)(8 6)(6 6)(5 5)(5 5)(7 8)(8 8)(7 4)(6 7)(7 6)(6 5)(7 9)(6 5)(7 3)(6 8)(6 6)(8 6)(9 9)(5 7)(7 7)(7 7)(6 5)(7 5)(7 8)(4 5)(7 5)(7 7)(6 4)(7 5)(8 9)(5 6)(8 3)(7 7)(4 5)(8 6)(7 9)(5 4)(8 3)(6 5)(6 4)(6 4)(5 8)(5 2)(8 5)(7 7)(6 1)(8 5)(8 5)(5 4)(9 5)(8 3)(7 3)(7 3)(7 5)(7 3)(8 3)(8 4)(9 7)(9 2)(9 4)(9 3)(7 3)(6 5)(8 7)(9 0)(9 5)(8 4)(6 4)(7 3)(7 1)(7 3)(7 6)(7 6)(9 1)(9 3)(7 4)(6 4)(5 6)(7 5)(8 2)(7 5)(7 5)(5 4)(7 5)(8 4)(7 3)(7 7)(8 7)(6 4)(7 7)(8 5)(6 5)(6 6)(8 4)(9 0)(9 4)(8 4)(7 7)(8 6)(9 4)(9 4)(8 8)(8 6)(8 3)(9 5)(9 4)(8 2)(9 6)(9 4)(9 3)(9 6)(9 4)(7 5)(8 7)(9 4)(8 3)(8 8)(8 6)(8 5)(8 9)(8 6)(7 4)(9 8)(9 4)(9 3)(9 8)(8 3)(6 8)(7 7)(8 2)(7 2)(8 1)(9 4)(8 1)(6 2)(8 3)(8 1)(9 6)(9 0)(9 2)(8 5)(8 3)(5 3)(7 3)(9 1)(9 2)(8 4)(9 3)(8 2)(8 2)(9 4)(9 2)(9 2)(9 2)(9 1)(8 2)(8 2)(6 3)(7 3)(9 2)(8 1)(9 1)(7 4)(9 2)(8 2)(9 2)(8 1)(8 2)(7 2)(7 2)(7 3)(6 4)(5 4)(6 2)(7 3)(8 3)(8 1)(8 1)(6 2)(7 3)(9 3)(9 4)(8 5)(8 4)(8 3)(6 3)(6 4)(5 4)(8 7)(9 7)(7 6)(8 5)(9 3)(7 7)(9 6)(9 5)(8 1)(9 4)(8 6)(7 6)(7 5)(8 2)(7 3)(9 1)(9 1)(8 4)(9 1)(7 2)(5 4)(9 1)(9 6)(9 4)(5 3)(9 1)(7 3)(6 6)(8 4)(7 5)(7 3)(6 4)(5 8)(5 6)(6 4)(6 4)(7 4)(7 6)(5 7)(6 5)(5 6)(5 5)(5 5)(5 5)(6 4)(6 4)(5 4)(5 8)(5 4)(5 4)(4 5)(5 5)(6 6)(5 4)(5 3)(5 4)(6 4)(6 4)(5 4)(5 3)(5 8)(5 6)(5 7)(6 6)(5 5)(5 6)(7 5)(6 7)(5 5)(6 2)(6 4)(6 5)(5 4)(6 4)(7 2)(5 5)(4 2)(4 1)(5 2)(6 4)(6 1)(6 3)(4 3)(5 4)(7 3)(8 0)(8 1)(9 2)(6 2)(7 0)(8 0)(8 1)(6 1)(7 0)(8 1)(9 1)(9 0)(8 1)(8 0)(8 2)(8 1)(9 1)(7 1)(9 0)(9 1)(8 3)(9 1)(7 2)(7 2)(8 3)(9 3)(9 2)(8 3)(8 3)(8 2)(9 1)(9 1)(8 2)(6 1)(7 1)(8 2)(8 3)(7 0)(5 0)(7 0)(8 0)(6 1)(6 0)(6 1)(7 4)(8 3)(8 4)(9 1)(6 3)(8 2)(8 2)(8 1)(5 3)(5 3)(5 3)(5 4)(5 3)(5 2)(5 2)(5 2)(6 3)(6 3)(5 3)(5 3)(6 2)(6 2)(7 2)(6 2)(5 2)(7 1)(5 2)(5 1)(5 2)(5 1)(5 1)(6 2)(5 2)(5 1)(5 1)(4 2)(5 1)(4 1)(4 2)(5 1)(4 1)(7 3)(6 2)(5 0)(6 0)(7 0)(9 0)(9 0)(9 0)(9 0)(9 0)(9 0)(9 0)(6 2)(6 1)(8 1)(8 1)(8 0)(8 1)(7 0)(7 0)(8 0)(9 1)(9 0)(9 0)(9 0)(9 0)(7 0)(5 0)(6 0)(7 0)(6 3)(6 0)(7 0)(5 3)(5 0)(7 0)(8 5)(8 0)(7 0)(8 3)(7 0)(6 0)(3 7)(4 0)(5 1)(6 4)(7 0)(7 0)(8 4)(6 1)(6 0)(7 3)(6 5)(8 0)(8 0)(7 5)(5 0)(4 1)(5 2)(5 1)(4 1)(4 2)(3 1)(4 1)(5 4)(4 2)(4 2)(4 5)(4 2)(4 1)(5 4)(3 2)(3 2)(4 5)(3 2)(3 4)(3 4)(3 3)(4 2)(4 7)(3 4)(4 2)(4 5)(3 2)(3 3)(3 3)(3 2)(4 1)(3 4)(3 1)(4 1)(4 5)(3 4)(3 4)(4 8)(3 6)(4 2)(4 3)(3 3)(4 2)(3 4)(5 2)(4 2)(5 2)(4 3)(5 1)(5 2)(4 1)(4 0)(4 4)(5 2)(4 1)(5 4)(5 1)(4 1)(5 2)(3 3)(4 2)(4 4)(6 3)(6 0)(5 4)(5 2)(5 1)(5 4)(4 0)(4 4)(3 1)(5 3)(5 7)(5 2)(5 1)(5 4)(4 2)(4 2)(4 2)(4 3)(4 1)(4 2)(4 1)(5 0)(4 3)(5 1)(4 1)(4 5)(4 2)(4 0)(4 5)(4 2)(4 1)(4 5)(4 0)(3 0)(5 2)(4 0)(4 3)(6 7)(6 4)(6 3)(7 3)(5 0)(6 2)(7 4)(7 1)(6 2)(6 6)(8 0)(8 1)(7 2)(5 2)(3 3)(5 8)(6 1)(5 2)(6 2)(5 2)(4 4)(5 6)(5 3)(5 4)(7 5)(9 0)(7 2)(7 6)(5 2)(3 4)(7 4)(7 0)(7 0)(6 5)(5 1)(5 1)(8 2)(9 0)(6 1)(6 2)(9 0)(8 2)(9 4)(6 2)(4 4)(6 4)(7 0)(8 0)(7 3)(5 3)(7 1)(7 3)(8 0)(5 1)(8 2)(8 0)(6 0)(6 3)(6 0)(7 0)(7 4)(5 1)(5 1)(5 4)(4 1)(7 1)(4 6)(5 0)(5 0)(8 4)(7 0)(6 0)(4 2)(4 0)(6 0)(5 5)(6 0)(5 1)(5 5)(5 2)(5 1)(6 8)(5 2)(4 2)(8 8)(6 0)(7 1)(7 9)(4 0)(8 1)(7 7)(5 2)(6 3)(5 9)(3 4)(4 3)(5 9)(4 4)(3 2)(5 4)(6 1)(7 0)(6 7)(4 1)(4 1)(3 4)(4 0)(4 0)(4 4)(4 1)(4 2)(4 6)(4 1)(5 2)(5 7)(5 3)(5 4)(6 9)(4 6)(7 7)(5 8)(5 8)(5 7)(6 8)(5 8)(6 7)(6 8)(6 2)(7 3)(7 2)(8 1)(7 1)(6 5)(4 4)(5 6)(7 7)(7 3)(7 6)(7 7)(5 6)(6 5)(7 8)(6 5)(5 2)(6 6)(7 3)(7 2)(5 6)(4 5)(7 3)(5 5)(5 3)(6 2)(5 4)(6 4)(7 3)(6 3)(6 2)(6 4)(7 3)(6 2)(6 0)(4 1)(3 2)(4 3)(4 5)(5 5)(5 6)(6 6)(4 5)(6 3)(5 5)(5 5)(5 5)(7 7)(5 5)(5 1)(5 6)(4 7)(6 7)(5 8)(5 7)(5 6)(4 3)(6 6)(5 5)(5 6)(4 6)(4 7)(4 9)(5 2)(6 3)(5 4)(4 3)(4 5)(4 6)(5 4)(4 3)(4 2)(4 3)(3 5)(5 4)(5 6)(5 5)(6 4)(5 5)(6 6)(5 6)(5 1)(5 3)(5 0)(4 0)(3 1)(4 0)(3 0)(3 2)(3 2)(3 4)(3 4)(3 4)(3 2)(4 1)(4 4)(5 4)(4 6)(6 4)(5 5)(6 3)(5 1)(5 1)(4 0)(6 6)(5 1)(4 3)(5 0)(4 2)(4 0)(3 2)(3 1)(4 1)(4 5)(3 5)(4 2)(4 4)(3 7)(4 6)(4 4)(6 4)(4 3)(4 3)(6 3)(8 1)(5 5)(4 5)(5 0)(4 0)(5 1)(5 4)(5 1)(4 0)(5 2)(8 2)(7 2)(8 1)(7 1)(7 3)(6 0)(5 0)(5 0)(5 0)(6 3)(6 0)(6 0)(6 0)(6 0)(7 0)(5 0)(5 0)(4 0)(4 0)(3 1)(3 1)(4 1)(4 6)(6 1)(5 2)(6 1)(6 0)(5 3)(6 2)(5 1)(5 5)(7 1)(4 5)(7 5)(5 5)(6 3)(6 2)(9 0)(5 1)(5 0)(6 2)(5 1)(6 2)(5 3)(4 4)(6 3)(3 4)(4 2)(6 1)(5 3)(4 0)(4 2)(4 0)(4 3)(4 1)(4 2)(3 3)(3 3)(3 2)(3 0)(3 2)(3 3)(3 3)(3 0)(2 7)(2 3)(2 3)(2 3)(2 4)(2 1)(1 2)(1 4)(0 5)(0 5)(0 7)(0 6)(0 7)(0 6)(0 7)(0 8)(0 6)(0 6)(0 6)(0 6)(0 8)(0 7)(0 7)(0 7)(0 7)(0 7)(0 6)(0 7)(0 8)(0 7)(0 8)(0 8)(0 8)(0 8)(0 8)(0 8)(0 6)(0 5)(0 6)(0 6)(0 5)(0 7)(0 8)(0 6)(0 5)(0 7)(0 7)(0 6)(0 6) ) )
	TerryRiley-InC-face2_beatdur (bpmtobeatdur 128)
	 TerryRiley-InC-face2_RMS_values (list 0.012318 0.021586 0.048024 0.082933 0.101613 0.115185 0.128789 0.141981 0.154651 0.171039))
(setf TerryRiley-InC-face2_tune (make-instance (quote realtimetune) :grid TerryRiley-InC-face2_grid :chapters (quote (1)) :beatduration TerryRiley-InC-face2_beatdur :tunename "TerryRiley-InC-face2" :NbBeatsPerMeasure 4 :DataFromAnalysis TerryRiley-InC-face2_RMS_values))
(setf (gethash (quote "TerryRiley-InC-face2") *available-grids*) TerryRiley-InC-face2_tune)