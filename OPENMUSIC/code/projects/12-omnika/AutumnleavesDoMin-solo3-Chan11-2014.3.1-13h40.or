(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -74 128 77 1) (list 72 -26 58 22 1) (list 73 22 106 105 1) (list 72 172 159 113 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 33 113 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -74 133 101 1) (list 67 10 80 52 1) (list 63 53 155 112 1) (list 60 149 180 79 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 39 79 1) (list 58 102 176 88 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -43 229 82 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -53 80 68 1) (list 59 -33 38 63 1) (list 60 43 85 101 1) (list 63 154 80 100 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -47 90 89 1) (list 69 -10 48 51 1) (list 72 43 117 102 1) (list 75 149 86 104 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -52 164 103 1) (list 77 59 181 106 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -90 106 102 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 201 134 119 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -82 0 10 119 1) (list 81 -12 123 98 1) (list 79 116 90 100 1) (list 77 213 106 90 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -11 127 104 1) (list 74 111 100 92 1) (list 72 211 106 90 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -6 133 103 1) (list 69 105 225 94 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 46 94 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 179 123 102 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -17 95 94 1) (list 63 100 111 93 1) (list 65 211 117 89 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 10 89 1) (list 66 -11 138 106 1) (list 68 116 106 101 1) (list 69 213 116 91 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -2 112 100 1) (list 72 84 110 96 1) (list 74 194 123 103 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -25 139 107 1) (list 74 88 106 76 1) (list 73 188 91 88 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -35 117 79 1) (list 79 94 96 106 1) (list 82 174 123 89 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 84 -31 145 104 1) (list 86 98 231 98 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -86 0 330 98 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -86 0 162 98 1) (list 84 146 43 48 1) (list 82 173 106 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -78 102 86 1) (list 79 -13 187 100 1) (list 78 131 96 106 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -47 171 105 1) (list 79 134 106 104 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -52 229 64 1) (list 70 134 129 107 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -31 213 77 1) (list 67 161 74 83 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -26 144 119 1) (list 73 150 171 100 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -15 117 58 1) (list 70 134 123 92 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -100 116 90 1) (list 67 -10 107 101 1) (list 65 150 144 111 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -32 176 64 1) (list 62 160 139 93 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -31 159 96 1) (list 58 145 164 103 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -9 74 37 1) (list 59 1 138 64 1) (list 60 144 139 99 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -20 149 89 1) (list 65 155 133 93 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -41 133 107 1) (list 68 76 155 85 1) (list 66 182 135 67 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 20 67 1) (list 65 -1 117 64 1) (list 67 -1 80 65 1) (list 63 158 171 97 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -1 164 80 1) (list 64 163 144 85 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -21 149 104 1) (list 68 166 116 107 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -5 171 79 1) (list 71 170 134 102 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -6 138 104 1) (list 74 163 166 118 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 20 134 67 1) (list 72 186 145 95 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 9 95 1) (list 73 4 159 85 1) (list 75 190 106 97 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 10 116 69 1) (list 79 164 167 101 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 9 101 1) (list 80 -2 155 94 1) (list 81 217 112 120 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 149 84 87 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 76 -86 91 97 1) (list 72 5 111 99 1) (list 75 218 86 105 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 74 166 63 1) (list 72 223 102 105 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 21 111 79 1) (list 68 191 139 108 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 10 108 1) (list 66 20 149 75 1) (list 65 186 128 91 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -86 58 21 1) (list 63 -16 144 98 1) (list 62 175 106 89 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -27 176 82 1) (list 58 153 166 106 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -6 129 74 1) (list 62 180 139 104 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 15 112 101 1) (list 62 128 116 61 1) (list 57 207 123 72 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 37 72 1) (list 55 27 133 94 1) (list 57 213 106 95 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -17 76 38 1) (list 59 -11 58 39 1) (list 57 68 128 63 1) (list 55 170 133 86 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -11 133 102 1) (list 60 90 149 74 1) (list 57 218 111 58 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 63 58 1) (list 55 27 155 91 1) (list 57 197 117 96 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -39 155 84 1) (list 57 74 154 47 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -7 128 109 1) (list 55 190 90 96 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 -17 133 106 1) (list 56 185 128 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -8 139 82 1) (list 57 200 80 91 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 -13 164 105 1) (list 58 184 145 74 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -58 0 4 74 1) (list 60 -6 133 96 1) (list 60 180 123 76 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -2 122 113 1) (list 62 178 106 103 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -7 309 90 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 8 138 69 1) (list 66 188 141 107 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 14 107 1) (list 68 35 107 103 1) (list 69 190 127 106 1) (list 68 227 59 25 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 25 187 84 1) (list 65 211 106 89 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 19 154 91 1) (list 61 210 105 87 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 1 87 1) (list 62 12 148 67 1) (list 67 209 63 84 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 1 214 95 1) (list 64 220 59 34 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -14 192 98 1) (list 64 182 96 65 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -84 43 13 1) (list 74 7 171 107 1) (list 72 198 106 59 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 1 166 102 1) (list 69 215 115 85 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 22 85 1) (list 67 12 123 74 1) (list 69 198 132 117 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 17 117 1) (list 70 17 106 74 1) (list 71 183 116 109 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 2 148 100 1) (list 67 139 43 85 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -95 123 100 1) (list 60 -4 202 84 1) (list 63 145 85 27 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 172 96 107 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 2 143 79 1) (list 65 172 123 93 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 5 170 105 1) (list 68 186 111 111 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -11 171 91 1) (list 68 159 149 72 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -75 133 69 1) (list 65 20 107 89 1) (list 63 175 106 94 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -49 166 86 1) (list 61 95 128 76 1) (list 62 206 117 86 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -21 143 94 1) (list 61 95 90 90 1) (list 62 170 160 84 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 10 84 1) (list 61 -1 101 84 1) (list 60 80 80 77 1) (list 62 110 64 38 1) (list 58 190 91 84 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -32 111 89 1) (list 53 86 63 61 1) (list 58 170 145 99 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 53 -54 80 74 1) (list 57 31 123 93 1) (list 58 158 101 92 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -60 111 50 1) (list 55 31 143 89 1) (list 53 142 64 79 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 -102 159 93 1) (list 53 -17 75 64 1) (list 55 67 264 98 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 55 98 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 222 109 113 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 2 113 1) (list 66 -25 123 106 1) (list 65 72 112 91 1) (list 63 204 125 110 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 14 110 1) (list 62 30 134 102 1) (list 63 147 128 87 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -87 133 65 1) (list 60 19 106 97 1) (list 62 189 106 111 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -29 154 78 1) (list 62 67 123 40 1) (list 60 168 129 87 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 17 166 89 1) (list 57 203 112 81 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 28 302 81 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 44 81 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 225 105 101 1)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -54 0 23 101 1) (list 53 1 91 79 1) (list 55 119 117 97 1)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 -100 139 100 1) (list 58 22 86 100 1) (list 60 124 107 97 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -84 106 104 1) (list 63 28 96 74 1) (list 62 60 53 44 1) (list 64 140 96 62 1) (list 65 172 53 36 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -57 85 86 1) (list 68 28 138 80 1) (list 70 135 95 86 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -95 144 100 1) (list 74 34 90 105 1) (list 75 113 123 87 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -90 112 79 1) (list 79 22 166 103 1) (list 74 155 174 93 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 339 93 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 110 93 1) (list 72 137 100 88 1) (list 74 217 96 64 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -7 133 62 1) (list 70 136 129 104 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -8 107 105 1) (list 70 88 144 85 1) (list 69 194 117 55 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -23 106 98 1) (list 66 157 111 87 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -12 137 96 1) (list 69 157 149 105 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -12 159 74 1) (list 67 185 138 79 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 109 154 76 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -99 191 89 1) (list 69 23 154 71 1) (list 67 119 112 87 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -56 133 106 1) (list 70 50 214 96 1) (list 69 125 206 49 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 44 49 1) (list 67 12 111 109 1) (list 69 188 111 104 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -52 149 93 1) (list 69 39 170 68 1) (list 67 182 117 93 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 12 319 110 1) (list 70 130 91 65 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 33 110 1) (list 67 16 112 102 1) (list 73 219 110 102 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -73 0 34 102 1) (list 74 -41 139 88 1) (list 73 172 159 106 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -73 0 16 106 1) (list 72 65 264 98 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 330 98 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 140 98 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135) for val in (list (list 111 109 107 25 21 17 13 9 5 1) (list 5 2) (list 5 3) (list 5 4) (list 5) (list 9 6) (list 9 7) (list 9 8) (list 9) (list 97 13 10) (list 97 13 11) (list 97 13 12) (list 97 93 13) (list 117 17 14) (list 117 17 15) (list 117 17 16) (list 117 17) (list 21 18) (list 21 19) (list 21 20) (list 21) (list 25 22) (list 25 23) (list 25 24) (list 25) (list 107 65 33 26) (list 107 65 33 27) (list 65 33 28) (list 65 33 29) (list 65 33 30) (list 65 33 31) (list 65 33 32) (list 65 33) (list 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 93 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 97 94) (list 97 95) (list 97 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 109 108) (list 109) (list 111 110) (list 111) (list 113 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 130) (list 131) (list 132) (list 133) (list 134) (list 135) (list 136)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 0 13 14 15 0 17 18 19 0 21 22 23 0 25 26 27 28 29 30 31 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 93 94 95 17 18 19 20 21 22 23 24 25 26 0 107 0 109 0 111 13 14 15 16 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 93 15 94 16 95 17 18 19 20 21 22 23 24 -1 25 26 27 28 107 29 30 109 31 32 111 33 34 35 36 37 38 39 40 41 42 43 44) for val in (list 111 33 34 35 36 37 38 39 40 41 42 43 93 113 114 94 115 95 116 96 97 98 99 100 117 118 119 120 0 121 122 123 124 108 125 126 110 127 128 112 129 130 131 132 133 134 135 136 89 90 91 92) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 4 5 6 7 1 2 3 4 5 6 7 8 9 10 0 1 0 1 0 1 1 2 3 4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 136 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 127 :navigationmode (quote continuity) :currentstateidx 128 :prevstateidx 127 :max-continuity 1000 :start-region (list 0 136) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :useestrada nil :usehindemith nil :refharmgrid nil :harmgridlength 48 :beats/measure 4 :reftempo 330 :currenttranspo 0 :lengthfactorsfromgrid (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t))